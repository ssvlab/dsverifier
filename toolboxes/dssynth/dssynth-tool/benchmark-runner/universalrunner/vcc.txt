CBMC version 5.6 64-bit x86_64 linux
Parsing discretization_check.c
Converting
Type-checking discretization_check
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop A_minus_B_K.0 iteration 1 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.0 iteration 2 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.0 iteration 3 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.1 iteration 1 file discretization_check.c line 198 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.0 iteration 1 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.0 iteration 2 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.0 iteration 3 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.1 iteration 2 file discretization_check.c line 198 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.0 iteration 1 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.0 iteration 2 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.0 iteration 3 file discretization_check.c line 199 function A_minus_B_K thread 0
Unwinding loop A_minus_B_K.1 iteration 3 file discretization_check.c line 198 function A_minus_B_K thread 0
Unwinding loop check_stability.0 iteration 1 file discretization_check.c line 50 function check_stability thread 0
Unwinding loop check_stability.0 iteration 2 file discretization_check.c line 50 function check_stability thread 0
Unwinding loop check_stability.0 iteration 3 file discretization_check.c line 50 function check_stability thread 0
Unwinding loop check_stability.0 iteration 4 file discretization_check.c line 50 function check_stability thread 0
Unwinding loop check_stability.1 iteration 1 file discretization_check.c line 56 function check_stability thread 0
Unwinding loop check_stability.1 iteration 2 file discretization_check.c line 56 function check_stability thread 0
Unwinding loop check_stability.1 iteration 3 file discretization_check.c line 56 function check_stability thread 0
Unwinding loop check_stability.1 iteration 4 file discretization_check.c line 56 function check_stability thread 0
Unwinding loop internal_pow.0 iteration 1 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop internal_pow.0 iteration 2 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop internal_pow.0 iteration 3 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop check_stability.2 iteration 1 file discretization_check.c line 66 function check_stability thread 0
Unwinding loop internal_pow.0 iteration 1 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop internal_pow.0 iteration 2 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop check_stability.2 iteration 2 file discretization_check.c line 66 function check_stability thread 0
Unwinding loop internal_pow.0 iteration 1 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop check_stability.2 iteration 3 file discretization_check.c line 66 function check_stability thread 0
Unwinding loop check_stability.2 iteration 4 file discretization_check.c line 66 function check_stability thread 0
Unwinding loop internal_pow.0 iteration 1 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop internal_pow.0 iteration 2 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop internal_pow.0 iteration 3 file discretization_check.c line 33 function internal_pow thread 0
Unwinding loop check_stability.3 iteration 1 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 2 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 3 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 4 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.4 iteration 1 file discretization_check.c line 84 function check_stability thread 0
Unwinding loop check_stability.3 iteration 1 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 2 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 3 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 4 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.4 iteration 2 file discretization_check.c line 84 function check_stability thread 0
Unwinding loop check_stability.3 iteration 1 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 2 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 3 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 4 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.4 iteration 3 file discretization_check.c line 84 function check_stability thread 0
Unwinding loop check_stability.3 iteration 1 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 2 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 3 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 4 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.4 iteration 4 file discretization_check.c line 84 function check_stability thread 0
Unwinding loop check_stability.3 iteration 1 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 2 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 3 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 4 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.4 iteration 5 file discretization_check.c line 84 function check_stability thread 0
Unwinding loop check_stability.3 iteration 1 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 2 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 3 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.3 iteration 4 file discretization_check.c line 85 function check_stability thread 0
Unwinding loop check_stability.4 iteration 6 file discretization_check.c line 84 function check_stability thread 0
Unwinding loop check_stability.6 iteration 1 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.6 iteration 2 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.6 iteration 3 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.6 iteration 4 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.7 iteration 1 file discretization_check.c line 89 function check_stability thread 0
Unwinding loop check_stability.5 iteration 1 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.5 iteration 2 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.5 iteration 3 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.5 iteration 4 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.6 iteration 1 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.7 iteration 2 file discretization_check.c line 89 function check_stability thread 0
Unwinding loop check_stability.6 iteration 1 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.6 iteration 2 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.6 iteration 3 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.7 iteration 3 file discretization_check.c line 89 function check_stability thread 0
Unwinding loop check_stability.5 iteration 1 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.5 iteration 2 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.5 iteration 3 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.6 iteration 1 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.7 iteration 4 file discretization_check.c line 89 function check_stability thread 0
Unwinding loop check_stability.6 iteration 1 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.6 iteration 2 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.7 iteration 5 file discretization_check.c line 89 function check_stability thread 0
Unwinding loop check_stability.5 iteration 1 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.5 iteration 2 file discretization_check.c line 97 function check_stability thread 0
Unwinding loop check_stability.6 iteration 1 file discretization_check.c line 90 function check_stability thread 0
Unwinding loop check_stability.7 iteration 6 file discretization_check.c line 89 function check_stability thread 0
Unwinding loop check_stability.8 iteration 1 file discretization_check.c line 109 function check_stability thread 0
Unwinding loop check_stability.8 iteration 2 file discretization_check.c line 109 function check_stability thread 0
Unwinding loop check_stability.8 iteration 3 file discretization_check.c line 109 function check_stability thread 0
Unwinding loop check_stability.8 iteration 4 file discretization_check.c line 109 function check_stability thread 0
Unwinding loop check_stability.8 iteration 5 file discretization_check.c line 109 function check_stability thread 0
Unwinding loop check_stability.8 iteration 6 file discretization_check.c line 109 function check_stability thread 0
Unwinding loop check_safety.0 iteration 1 file discretization_check.c line 276 function check_safety thread 0
Unwinding loop check_safety.0 iteration 2 file discretization_check.c line 276 function check_safety thread 0
Unwinding loop check_safety.0 iteration 3 file discretization_check.c line 276 function check_safety thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 1 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 2 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 3 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 1 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 2 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 3 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop check_safety.1 iteration 1 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 2 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 3 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.2 iteration 1 file discretization_check.c line 287 function check_safety thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 1 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 2 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 3 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 1 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 2 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 3 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop check_safety.1 iteration 1 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 2 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 3 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.2 iteration 2 file discretization_check.c line 287 function check_safety thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 1 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 2 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 3 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 1 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 2 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 3 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop check_safety.1 iteration 1 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 2 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 3 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.2 iteration 3 file discretization_check.c line 287 function check_safety thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 1 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 2 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 3 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 1 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 2 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 3 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop check_safety.1 iteration 1 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 2 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 3 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.2 iteration 4 file discretization_check.c line 287 function check_safety thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 1 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 2 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop inputs_equal_ref_minus_k_times_states.0 iteration 3 file discretization_check.c line 218 function inputs_equal_ref_minus_k_times_states thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 1 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 2 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 1 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 2 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.0 iteration 3 file discretization_check.c line 244 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop states_equals_A_states_plus_B_inputs.1 iteration 3 file discretization_check.c line 241 function states_equals_A_states_plus_B_inputs thread 0
Unwinding loop check_safety.1 iteration 1 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 2 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.1 iteration 3 file discretization_check.c line 292 function check_safety thread 0
Unwinding loop check_safety.2 iteration 5 file discretization_check.c line 287 function check_safety thread 0
size of program expression: 2093 steps
simple slicing removed 11 assignments
Generated 17 VCC(s), 17 remaining after simplification

VERIFICATION CONDITIONS:

file discretization_check.c line 307 function main
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
|--------------------------
{1} !(return_value_check_stability$1!0@1#2 == 0)

file discretization_check.c line 253 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
|--------------------------
{1} tmp_if_expr$1!0@1#5

file discretization_check.c line 254 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
|--------------------------
{1} tmp_if_expr$2!0@1#5

file discretization_check.c line 256 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
|--------------------------
{1} tmp_if_expr$3!0@1#5

file discretization_check.c line 253 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#5 ==> tmp_if_expr$1!0@2#5

file discretization_check.c line 254 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#5 ==> tmp_if_expr$2!0@2#5

file discretization_check.c line 256 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#5 ==> tmp_if_expr$3!0@2#5

file discretization_check.c line 253 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#5 ==> tmp_if_expr$1!0@3#5

file discretization_check.c line 254 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#5 ==> tmp_if_expr$2!0@3#5

file discretization_check.c line 256 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
{-793} \guard#25 == _controller_states#3[2l] < 1
{-794} tmp_if_expr$3!0@3#2 == _controller_states#3[2l] > -1
{-795} tmp_if_expr$3!0@3#3 == tmp_if_expr$3!0@3#1
{-796} tmp_if_expr$3!0@3#4 == FALSE
{-797} tmp_if_expr$3!0@3#5 == (\guard#25 && tmp_if_expr$3!0@3#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#5 ==> tmp_if_expr$3!0@3#5

file discretization_check.c line 253 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
{-793} \guard#25 == _controller_states#3[2l] < 1
{-794} tmp_if_expr$3!0@3#2 == _controller_states#3[2l] > -1
{-795} tmp_if_expr$3!0@3#3 == tmp_if_expr$3!0@3#1
{-796} tmp_if_expr$3!0@3#4 == FALSE
{-797} tmp_if_expr$3!0@3#5 == (\guard#25 && tmp_if_expr$3!0@3#2)
{-798} i!0@1#30 == 0
{-799} \guard#26 == _controller_states#3[0l] > 1
{-800} tmp_if_expr$2!0@1#42 == TRUE
{-801} tmp_if_expr$2!0@1#43 == tmp_if_expr$2!0@1#41
{-802} tmp_if_expr$2!0@1#44 == _controller_states#3[0l] < -1
{-803} tmp_if_expr$2!0@1#45 == (\guard#26 || tmp_if_expr$2!0@1#44)
{-804} check_safety#return_value!0#13 == 0
{-805} check_safety#return_value!0#14 == check_safety#return_value!0#12
{-806} i!0@1#32 == 0
{-807} k!0@1#22 == 2
{-808} i!0@1#33 == 1
{-809} \guard#27 == _controller_states#3[1l] > 1
{-810} tmp_if_expr$2!0@1#48 == TRUE
{-811} tmp_if_expr$2!0@1#49 == tmp_if_expr$2!0@1#47
{-812} tmp_if_expr$2!0@1#50 == _controller_states#3[1l] < -1
{-813} tmp_if_expr$2!0@1#51 == (\guard#27 || tmp_if_expr$2!0@1#50)
{-814} check_safety#return_value!0#15 == 0
{-815} check_safety#return_value!0#16 == check_safety#return_value!0#14
{-816} i!0@1#35 == 1
{-817} k!0@1#24 == 2
{-818} i!0@1#36 == 2
{-819} \guard#28 == _controller_states#3[2l] > 1
{-820} tmp_if_expr$2!0@1#54 == TRUE
{-821} tmp_if_expr$2!0@1#55 == tmp_if_expr$2!0@1#53
{-822} tmp_if_expr$2!0@1#56 == _controller_states#3[2l] < -1
{-823} tmp_if_expr$2!0@1#57 == (\guard#28 || tmp_if_expr$2!0@1#56)
{-824} check_safety#return_value!0#17 == 0
{-825} check_safety#return_value!0#18 == check_safety#return_value!0#16
{-826} i!0@1#38 == 2
{-827} k!0@1#26 == 2
{-828} i!0@1#39 == 3
{-829} i!0@1#41 == 3
{-830} k!0@1#28 == 2
{-831} tmp_if_expr$2!0@1#60 == tmp_if_expr$2!0@1#58
{-832} k!0@1#29 == 3
{-833} result_fxp!0@4#2 == 0
{-834} k!0@4#2 == 0
{-835} result_fxp!0@4#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]
{-836} _controller_inputs#11 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]))
{-837} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#11 < 1f && (float)_controller_inputs#11 > -1f
{-838} k!0@4#3 == 1
{-839} result_fxp!0@4#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]
{-840} _controller_inputs#12 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]))
{-841} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#12 < 1f && (float)_controller_inputs#12 > -1f
{-842} k!0@4#4 == 2
{-843} result_fxp!0@4#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]
{-844} _controller_inputs#13 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]))
{-845} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#13 < 1f && (float)_controller_inputs#13 > -1f
{-846} k!0@4#5 == 3
{-847} states_equals_A_states_plus_B_inputs_result#59 == ARRAY_OF(0)
{-848} i!0@4#2 == 0
{-849} k!0@4#2 == 0
{-850} states_equals_A_states_plus_B_inputs_result#60 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#3[0l]]
{-851} states_equals_A_states_plus_B_inputs_result#61 == states_equals_A_states_plus_B_inputs_result#60 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#60[0l]]
{-852} k!0@4#3 == 1
{-853} states_equals_A_states_plus_B_inputs_result#62 == states_equals_A_states_plus_B_inputs_result#61 WITH [0l:=0.07568359375 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#61[0l]]
{-854} states_equals_A_states_plus_B_inputs_result#63 == states_equals_A_states_plus_B_inputs_result#62 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#62[0l]]
{-855} k!0@4#4 == 2
{-856} states_equals_A_states_plus_B_inputs_result#64 == states_equals_A_states_plus_B_inputs_result#63 WITH [0l:=0.02099609375 * _controller_states#3[2l] + states_equals_A_states_plus_B_inputs_result#63[0l]]
{-857} states_equals_A_states_plus_B_inputs_result#65 == states_equals_A_states_plus_B_inputs_result#64 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#64[0l]]
{-858} k!0@4#5 == 3
{-859} i!0@4#3 == 1
{-860} k!0@4#8 == 0
{-861} states_equals_A_states_plus_B_inputs_result#66 == states_equals_A_states_plus_B_inputs_result#65 WITH [1l:=0.125 * _controller_states#3[0l] + states_equals_A_states_plus_B_inputs_result#65[1l]]
{-862} states_equals_A_states_plus_B_inputs_result#67 == states_equals_A_states_plus_B_inputs_result#66 WITH [1l:=states_equals_A_states_plus_B_inputs_result#66[1l]]
{-863} k!0@4#9 == 1
{-864} states_equals_A_states_plus_B_inputs_result#68 == states_equals_A_states_plus_B_inputs_result#67 WITH [1l:=states_equals_A_states_plus_B_inputs_result#67[1l]]
{-865} states_equals_A_states_plus_B_inputs_result#69 == states_equals_A_states_plus_B_inputs_result#68 WITH [1l:=states_equals_A_states_plus_B_inputs_result#68[1l]]
{-866} k!0@4#10 == 2
{-867} states_equals_A_states_plus_B_inputs_result#70 == states_equals_A_states_plus_B_inputs_result#69 WITH [1l:=states_equals_A_states_plus_B_inputs_result#69[1l]]
{-868} states_equals_A_states_plus_B_inputs_result#71 == states_equals_A_states_plus_B_inputs_result#70 WITH [1l:=states_equals_A_states_plus_B_inputs_result#70[1l]]
{-869} k!0@4#11 == 3
{-870} i!0@4#4 == 2
{-871} k!0@4#14 == 0
{-872} states_equals_A_states_plus_B_inputs_result#72 == states_equals_A_states_plus_B_inputs_result#71 WITH [2l:=states_equals_A_states_plus_B_inputs_result#71[2l]]
{-873} states_equals_A_states_plus_B_inputs_result#73 == states_equals_A_states_plus_B_inputs_result#72 WITH [2l:=states_equals_A_states_plus_B_inputs_result#72[2l]]
{-874} k!0@4#15 == 1
{-875} states_equals_A_states_plus_B_inputs_result#74 == states_equals_A_states_plus_B_inputs_result#73 WITH [2l:=0.015625 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#73[2l]]
{-876} states_equals_A_states_plus_B_inputs_result#75 == states_equals_A_states_plus_B_inputs_result#74 WITH [2l:=states_equals_A_states_plus_B_inputs_result#74[2l]]
{-877} k!0@4#16 == 2
{-878} states_equals_A_states_plus_B_inputs_result#76 == states_equals_A_states_plus_B_inputs_result#75 WITH [2l:=states_equals_A_states_plus_B_inputs_result#75[2l]]
{-879} states_equals_A_states_plus_B_inputs_result#77 == states_equals_A_states_plus_B_inputs_result#76 WITH [2l:=states_equals_A_states_plus_B_inputs_result#76[2l]]
{-880} k!0@4#17 == 3
{-881} i!0@4#5 == 3
{-882} k!0@4#20 == k!0@4#18
{-883} _controller_states#4 == states_equals_A_states_plus_B_inputs_result#77
{-884} \guard#29 == _controller_states#4[0l] < 1
{-885} tmp_if_expr$1!0@4#2 == _controller_states#4[0l] > -1
{-886} tmp_if_expr$1!0@4#3 == tmp_if_expr$1!0@4#1
{-887} tmp_if_expr$1!0@4#4 == FALSE
{-888} tmp_if_expr$1!0@4#5 == (\guard#29 && tmp_if_expr$1!0@4#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> tmp_if_expr$1!0@4#5

file discretization_check.c line 254 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
{-793} \guard#25 == _controller_states#3[2l] < 1
{-794} tmp_if_expr$3!0@3#2 == _controller_states#3[2l] > -1
{-795} tmp_if_expr$3!0@3#3 == tmp_if_expr$3!0@3#1
{-796} tmp_if_expr$3!0@3#4 == FALSE
{-797} tmp_if_expr$3!0@3#5 == (\guard#25 && tmp_if_expr$3!0@3#2)
{-798} i!0@1#30 == 0
{-799} \guard#26 == _controller_states#3[0l] > 1
{-800} tmp_if_expr$2!0@1#42 == TRUE
{-801} tmp_if_expr$2!0@1#43 == tmp_if_expr$2!0@1#41
{-802} tmp_if_expr$2!0@1#44 == _controller_states#3[0l] < -1
{-803} tmp_if_expr$2!0@1#45 == (\guard#26 || tmp_if_expr$2!0@1#44)
{-804} check_safety#return_value!0#13 == 0
{-805} check_safety#return_value!0#14 == check_safety#return_value!0#12
{-806} i!0@1#32 == 0
{-807} k!0@1#22 == 2
{-808} i!0@1#33 == 1
{-809} \guard#27 == _controller_states#3[1l] > 1
{-810} tmp_if_expr$2!0@1#48 == TRUE
{-811} tmp_if_expr$2!0@1#49 == tmp_if_expr$2!0@1#47
{-812} tmp_if_expr$2!0@1#50 == _controller_states#3[1l] < -1
{-813} tmp_if_expr$2!0@1#51 == (\guard#27 || tmp_if_expr$2!0@1#50)
{-814} check_safety#return_value!0#15 == 0
{-815} check_safety#return_value!0#16 == check_safety#return_value!0#14
{-816} i!0@1#35 == 1
{-817} k!0@1#24 == 2
{-818} i!0@1#36 == 2
{-819} \guard#28 == _controller_states#3[2l] > 1
{-820} tmp_if_expr$2!0@1#54 == TRUE
{-821} tmp_if_expr$2!0@1#55 == tmp_if_expr$2!0@1#53
{-822} tmp_if_expr$2!0@1#56 == _controller_states#3[2l] < -1
{-823} tmp_if_expr$2!0@1#57 == (\guard#28 || tmp_if_expr$2!0@1#56)
{-824} check_safety#return_value!0#17 == 0
{-825} check_safety#return_value!0#18 == check_safety#return_value!0#16
{-826} i!0@1#38 == 2
{-827} k!0@1#26 == 2
{-828} i!0@1#39 == 3
{-829} i!0@1#41 == 3
{-830} k!0@1#28 == 2
{-831} tmp_if_expr$2!0@1#60 == tmp_if_expr$2!0@1#58
{-832} k!0@1#29 == 3
{-833} result_fxp!0@4#2 == 0
{-834} k!0@4#2 == 0
{-835} result_fxp!0@4#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]
{-836} _controller_inputs#11 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]))
{-837} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#11 < 1f && (float)_controller_inputs#11 > -1f
{-838} k!0@4#3 == 1
{-839} result_fxp!0@4#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]
{-840} _controller_inputs#12 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]))
{-841} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#12 < 1f && (float)_controller_inputs#12 > -1f
{-842} k!0@4#4 == 2
{-843} result_fxp!0@4#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]
{-844} _controller_inputs#13 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]))
{-845} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#13 < 1f && (float)_controller_inputs#13 > -1f
{-846} k!0@4#5 == 3
{-847} states_equals_A_states_plus_B_inputs_result#59 == ARRAY_OF(0)
{-848} i!0@4#2 == 0
{-849} k!0@4#2 == 0
{-850} states_equals_A_states_plus_B_inputs_result#60 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#3[0l]]
{-851} states_equals_A_states_plus_B_inputs_result#61 == states_equals_A_states_plus_B_inputs_result#60 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#60[0l]]
{-852} k!0@4#3 == 1
{-853} states_equals_A_states_plus_B_inputs_result#62 == states_equals_A_states_plus_B_inputs_result#61 WITH [0l:=0.07568359375 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#61[0l]]
{-854} states_equals_A_states_plus_B_inputs_result#63 == states_equals_A_states_plus_B_inputs_result#62 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#62[0l]]
{-855} k!0@4#4 == 2
{-856} states_equals_A_states_plus_B_inputs_result#64 == states_equals_A_states_plus_B_inputs_result#63 WITH [0l:=0.02099609375 * _controller_states#3[2l] + states_equals_A_states_plus_B_inputs_result#63[0l]]
{-857} states_equals_A_states_plus_B_inputs_result#65 == states_equals_A_states_plus_B_inputs_result#64 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#64[0l]]
{-858} k!0@4#5 == 3
{-859} i!0@4#3 == 1
{-860} k!0@4#8 == 0
{-861} states_equals_A_states_plus_B_inputs_result#66 == states_equals_A_states_plus_B_inputs_result#65 WITH [1l:=0.125 * _controller_states#3[0l] + states_equals_A_states_plus_B_inputs_result#65[1l]]
{-862} states_equals_A_states_plus_B_inputs_result#67 == states_equals_A_states_plus_B_inputs_result#66 WITH [1l:=states_equals_A_states_plus_B_inputs_result#66[1l]]
{-863} k!0@4#9 == 1
{-864} states_equals_A_states_plus_B_inputs_result#68 == states_equals_A_states_plus_B_inputs_result#67 WITH [1l:=states_equals_A_states_plus_B_inputs_result#67[1l]]
{-865} states_equals_A_states_plus_B_inputs_result#69 == states_equals_A_states_plus_B_inputs_result#68 WITH [1l:=states_equals_A_states_plus_B_inputs_result#68[1l]]
{-866} k!0@4#10 == 2
{-867} states_equals_A_states_plus_B_inputs_result#70 == states_equals_A_states_plus_B_inputs_result#69 WITH [1l:=states_equals_A_states_plus_B_inputs_result#69[1l]]
{-868} states_equals_A_states_plus_B_inputs_result#71 == states_equals_A_states_plus_B_inputs_result#70 WITH [1l:=states_equals_A_states_plus_B_inputs_result#70[1l]]
{-869} k!0@4#11 == 3
{-870} i!0@4#4 == 2
{-871} k!0@4#14 == 0
{-872} states_equals_A_states_plus_B_inputs_result#72 == states_equals_A_states_plus_B_inputs_result#71 WITH [2l:=states_equals_A_states_plus_B_inputs_result#71[2l]]
{-873} states_equals_A_states_plus_B_inputs_result#73 == states_equals_A_states_plus_B_inputs_result#72 WITH [2l:=states_equals_A_states_plus_B_inputs_result#72[2l]]
{-874} k!0@4#15 == 1
{-875} states_equals_A_states_plus_B_inputs_result#74 == states_equals_A_states_plus_B_inputs_result#73 WITH [2l:=0.015625 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#73[2l]]
{-876} states_equals_A_states_plus_B_inputs_result#75 == states_equals_A_states_plus_B_inputs_result#74 WITH [2l:=states_equals_A_states_plus_B_inputs_result#74[2l]]
{-877} k!0@4#16 == 2
{-878} states_equals_A_states_plus_B_inputs_result#76 == states_equals_A_states_plus_B_inputs_result#75 WITH [2l:=states_equals_A_states_plus_B_inputs_result#75[2l]]
{-879} states_equals_A_states_plus_B_inputs_result#77 == states_equals_A_states_plus_B_inputs_result#76 WITH [2l:=states_equals_A_states_plus_B_inputs_result#76[2l]]
{-880} k!0@4#17 == 3
{-881} i!0@4#5 == 3
{-882} k!0@4#20 == k!0@4#18
{-883} _controller_states#4 == states_equals_A_states_plus_B_inputs_result#77
{-884} \guard#29 == _controller_states#4[0l] < 1
{-885} tmp_if_expr$1!0@4#2 == _controller_states#4[0l] > -1
{-886} tmp_if_expr$1!0@4#3 == tmp_if_expr$1!0@4#1
{-887} tmp_if_expr$1!0@4#4 == FALSE
{-888} tmp_if_expr$1!0@4#5 == (\guard#29 && tmp_if_expr$1!0@4#2)
{-889} \guard#30 == _controller_states#4[1l] < 1
{-890} tmp_if_expr$2!0@4#2 == _controller_states#4[1l] > -1
{-891} tmp_if_expr$2!0@4#3 == tmp_if_expr$2!0@4#1
{-892} tmp_if_expr$2!0@4#4 == FALSE
{-893} tmp_if_expr$2!0@4#5 == (\guard#30 && tmp_if_expr$2!0@4#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> tmp_if_expr$2!0@4#5

file discretization_check.c line 256 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
{-793} \guard#25 == _controller_states#3[2l] < 1
{-794} tmp_if_expr$3!0@3#2 == _controller_states#3[2l] > -1
{-795} tmp_if_expr$3!0@3#3 == tmp_if_expr$3!0@3#1
{-796} tmp_if_expr$3!0@3#4 == FALSE
{-797} tmp_if_expr$3!0@3#5 == (\guard#25 && tmp_if_expr$3!0@3#2)
{-798} i!0@1#30 == 0
{-799} \guard#26 == _controller_states#3[0l] > 1
{-800} tmp_if_expr$2!0@1#42 == TRUE
{-801} tmp_if_expr$2!0@1#43 == tmp_if_expr$2!0@1#41
{-802} tmp_if_expr$2!0@1#44 == _controller_states#3[0l] < -1
{-803} tmp_if_expr$2!0@1#45 == (\guard#26 || tmp_if_expr$2!0@1#44)
{-804} check_safety#return_value!0#13 == 0
{-805} check_safety#return_value!0#14 == check_safety#return_value!0#12
{-806} i!0@1#32 == 0
{-807} k!0@1#22 == 2
{-808} i!0@1#33 == 1
{-809} \guard#27 == _controller_states#3[1l] > 1
{-810} tmp_if_expr$2!0@1#48 == TRUE
{-811} tmp_if_expr$2!0@1#49 == tmp_if_expr$2!0@1#47
{-812} tmp_if_expr$2!0@1#50 == _controller_states#3[1l] < -1
{-813} tmp_if_expr$2!0@1#51 == (\guard#27 || tmp_if_expr$2!0@1#50)
{-814} check_safety#return_value!0#15 == 0
{-815} check_safety#return_value!0#16 == check_safety#return_value!0#14
{-816} i!0@1#35 == 1
{-817} k!0@1#24 == 2
{-818} i!0@1#36 == 2
{-819} \guard#28 == _controller_states#3[2l] > 1
{-820} tmp_if_expr$2!0@1#54 == TRUE
{-821} tmp_if_expr$2!0@1#55 == tmp_if_expr$2!0@1#53
{-822} tmp_if_expr$2!0@1#56 == _controller_states#3[2l] < -1
{-823} tmp_if_expr$2!0@1#57 == (\guard#28 || tmp_if_expr$2!0@1#56)
{-824} check_safety#return_value!0#17 == 0
{-825} check_safety#return_value!0#18 == check_safety#return_value!0#16
{-826} i!0@1#38 == 2
{-827} k!0@1#26 == 2
{-828} i!0@1#39 == 3
{-829} i!0@1#41 == 3
{-830} k!0@1#28 == 2
{-831} tmp_if_expr$2!0@1#60 == tmp_if_expr$2!0@1#58
{-832} k!0@1#29 == 3
{-833} result_fxp!0@4#2 == 0
{-834} k!0@4#2 == 0
{-835} result_fxp!0@4#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]
{-836} _controller_inputs#11 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]))
{-837} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#11 < 1f && (float)_controller_inputs#11 > -1f
{-838} k!0@4#3 == 1
{-839} result_fxp!0@4#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]
{-840} _controller_inputs#12 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]))
{-841} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#12 < 1f && (float)_controller_inputs#12 > -1f
{-842} k!0@4#4 == 2
{-843} result_fxp!0@4#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]
{-844} _controller_inputs#13 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]))
{-845} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#13 < 1f && (float)_controller_inputs#13 > -1f
{-846} k!0@4#5 == 3
{-847} states_equals_A_states_plus_B_inputs_result#59 == ARRAY_OF(0)
{-848} i!0@4#2 == 0
{-849} k!0@4#2 == 0
{-850} states_equals_A_states_plus_B_inputs_result#60 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#3[0l]]
{-851} states_equals_A_states_plus_B_inputs_result#61 == states_equals_A_states_plus_B_inputs_result#60 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#60[0l]]
{-852} k!0@4#3 == 1
{-853} states_equals_A_states_plus_B_inputs_result#62 == states_equals_A_states_plus_B_inputs_result#61 WITH [0l:=0.07568359375 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#61[0l]]
{-854} states_equals_A_states_plus_B_inputs_result#63 == states_equals_A_states_plus_B_inputs_result#62 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#62[0l]]
{-855} k!0@4#4 == 2
{-856} states_equals_A_states_plus_B_inputs_result#64 == states_equals_A_states_plus_B_inputs_result#63 WITH [0l:=0.02099609375 * _controller_states#3[2l] + states_equals_A_states_plus_B_inputs_result#63[0l]]
{-857} states_equals_A_states_plus_B_inputs_result#65 == states_equals_A_states_plus_B_inputs_result#64 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#64[0l]]
{-858} k!0@4#5 == 3
{-859} i!0@4#3 == 1
{-860} k!0@4#8 == 0
{-861} states_equals_A_states_plus_B_inputs_result#66 == states_equals_A_states_plus_B_inputs_result#65 WITH [1l:=0.125 * _controller_states#3[0l] + states_equals_A_states_plus_B_inputs_result#65[1l]]
{-862} states_equals_A_states_plus_B_inputs_result#67 == states_equals_A_states_plus_B_inputs_result#66 WITH [1l:=states_equals_A_states_plus_B_inputs_result#66[1l]]
{-863} k!0@4#9 == 1
{-864} states_equals_A_states_plus_B_inputs_result#68 == states_equals_A_states_plus_B_inputs_result#67 WITH [1l:=states_equals_A_states_plus_B_inputs_result#67[1l]]
{-865} states_equals_A_states_plus_B_inputs_result#69 == states_equals_A_states_plus_B_inputs_result#68 WITH [1l:=states_equals_A_states_plus_B_inputs_result#68[1l]]
{-866} k!0@4#10 == 2
{-867} states_equals_A_states_plus_B_inputs_result#70 == states_equals_A_states_plus_B_inputs_result#69 WITH [1l:=states_equals_A_states_plus_B_inputs_result#69[1l]]
{-868} states_equals_A_states_plus_B_inputs_result#71 == states_equals_A_states_plus_B_inputs_result#70 WITH [1l:=states_equals_A_states_plus_B_inputs_result#70[1l]]
{-869} k!0@4#11 == 3
{-870} i!0@4#4 == 2
{-871} k!0@4#14 == 0
{-872} states_equals_A_states_plus_B_inputs_result#72 == states_equals_A_states_plus_B_inputs_result#71 WITH [2l:=states_equals_A_states_plus_B_inputs_result#71[2l]]
{-873} states_equals_A_states_plus_B_inputs_result#73 == states_equals_A_states_plus_B_inputs_result#72 WITH [2l:=states_equals_A_states_plus_B_inputs_result#72[2l]]
{-874} k!0@4#15 == 1
{-875} states_equals_A_states_plus_B_inputs_result#74 == states_equals_A_states_plus_B_inputs_result#73 WITH [2l:=0.015625 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#73[2l]]
{-876} states_equals_A_states_plus_B_inputs_result#75 == states_equals_A_states_plus_B_inputs_result#74 WITH [2l:=states_equals_A_states_plus_B_inputs_result#74[2l]]
{-877} k!0@4#16 == 2
{-878} states_equals_A_states_plus_B_inputs_result#76 == states_equals_A_states_plus_B_inputs_result#75 WITH [2l:=states_equals_A_states_plus_B_inputs_result#75[2l]]
{-879} states_equals_A_states_plus_B_inputs_result#77 == states_equals_A_states_plus_B_inputs_result#76 WITH [2l:=states_equals_A_states_plus_B_inputs_result#76[2l]]
{-880} k!0@4#17 == 3
{-881} i!0@4#5 == 3
{-882} k!0@4#20 == k!0@4#18
{-883} _controller_states#4 == states_equals_A_states_plus_B_inputs_result#77
{-884} \guard#29 == _controller_states#4[0l] < 1
{-885} tmp_if_expr$1!0@4#2 == _controller_states#4[0l] > -1
{-886} tmp_if_expr$1!0@4#3 == tmp_if_expr$1!0@4#1
{-887} tmp_if_expr$1!0@4#4 == FALSE
{-888} tmp_if_expr$1!0@4#5 == (\guard#29 && tmp_if_expr$1!0@4#2)
{-889} \guard#30 == _controller_states#4[1l] < 1
{-890} tmp_if_expr$2!0@4#2 == _controller_states#4[1l] > -1
{-891} tmp_if_expr$2!0@4#3 == tmp_if_expr$2!0@4#1
{-892} tmp_if_expr$2!0@4#4 == FALSE
{-893} tmp_if_expr$2!0@4#5 == (\guard#30 && tmp_if_expr$2!0@4#2)
{-894} \guard#31 == _controller_states#4[2l] < 1
{-895} tmp_if_expr$3!0@4#2 == _controller_states#4[2l] > -1
{-896} tmp_if_expr$3!0@4#3 == tmp_if_expr$3!0@4#1
{-897} tmp_if_expr$3!0@4#4 == FALSE
{-898} tmp_if_expr$3!0@4#5 == (\guard#31 && tmp_if_expr$3!0@4#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> tmp_if_expr$3!0@4#5

file discretization_check.c line 253 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
{-793} \guard#25 == _controller_states#3[2l] < 1
{-794} tmp_if_expr$3!0@3#2 == _controller_states#3[2l] > -1
{-795} tmp_if_expr$3!0@3#3 == tmp_if_expr$3!0@3#1
{-796} tmp_if_expr$3!0@3#4 == FALSE
{-797} tmp_if_expr$3!0@3#5 == (\guard#25 && tmp_if_expr$3!0@3#2)
{-798} i!0@1#30 == 0
{-799} \guard#26 == _controller_states#3[0l] > 1
{-800} tmp_if_expr$2!0@1#42 == TRUE
{-801} tmp_if_expr$2!0@1#43 == tmp_if_expr$2!0@1#41
{-802} tmp_if_expr$2!0@1#44 == _controller_states#3[0l] < -1
{-803} tmp_if_expr$2!0@1#45 == (\guard#26 || tmp_if_expr$2!0@1#44)
{-804} check_safety#return_value!0#13 == 0
{-805} check_safety#return_value!0#14 == check_safety#return_value!0#12
{-806} i!0@1#32 == 0
{-807} k!0@1#22 == 2
{-808} i!0@1#33 == 1
{-809} \guard#27 == _controller_states#3[1l] > 1
{-810} tmp_if_expr$2!0@1#48 == TRUE
{-811} tmp_if_expr$2!0@1#49 == tmp_if_expr$2!0@1#47
{-812} tmp_if_expr$2!0@1#50 == _controller_states#3[1l] < -1
{-813} tmp_if_expr$2!0@1#51 == (\guard#27 || tmp_if_expr$2!0@1#50)
{-814} check_safety#return_value!0#15 == 0
{-815} check_safety#return_value!0#16 == check_safety#return_value!0#14
{-816} i!0@1#35 == 1
{-817} k!0@1#24 == 2
{-818} i!0@1#36 == 2
{-819} \guard#28 == _controller_states#3[2l] > 1
{-820} tmp_if_expr$2!0@1#54 == TRUE
{-821} tmp_if_expr$2!0@1#55 == tmp_if_expr$2!0@1#53
{-822} tmp_if_expr$2!0@1#56 == _controller_states#3[2l] < -1
{-823} tmp_if_expr$2!0@1#57 == (\guard#28 || tmp_if_expr$2!0@1#56)
{-824} check_safety#return_value!0#17 == 0
{-825} check_safety#return_value!0#18 == check_safety#return_value!0#16
{-826} i!0@1#38 == 2
{-827} k!0@1#26 == 2
{-828} i!0@1#39 == 3
{-829} i!0@1#41 == 3
{-830} k!0@1#28 == 2
{-831} tmp_if_expr$2!0@1#60 == tmp_if_expr$2!0@1#58
{-832} k!0@1#29 == 3
{-833} result_fxp!0@4#2 == 0
{-834} k!0@4#2 == 0
{-835} result_fxp!0@4#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]
{-836} _controller_inputs#11 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]))
{-837} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#11 < 1f && (float)_controller_inputs#11 > -1f
{-838} k!0@4#3 == 1
{-839} result_fxp!0@4#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]
{-840} _controller_inputs#12 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]))
{-841} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#12 < 1f && (float)_controller_inputs#12 > -1f
{-842} k!0@4#4 == 2
{-843} result_fxp!0@4#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]
{-844} _controller_inputs#13 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]))
{-845} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#13 < 1f && (float)_controller_inputs#13 > -1f
{-846} k!0@4#5 == 3
{-847} states_equals_A_states_plus_B_inputs_result#59 == ARRAY_OF(0)
{-848} i!0@4#2 == 0
{-849} k!0@4#2 == 0
{-850} states_equals_A_states_plus_B_inputs_result#60 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#3[0l]]
{-851} states_equals_A_states_plus_B_inputs_result#61 == states_equals_A_states_plus_B_inputs_result#60 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#60[0l]]
{-852} k!0@4#3 == 1
{-853} states_equals_A_states_plus_B_inputs_result#62 == states_equals_A_states_plus_B_inputs_result#61 WITH [0l:=0.07568359375 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#61[0l]]
{-854} states_equals_A_states_plus_B_inputs_result#63 == states_equals_A_states_plus_B_inputs_result#62 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#62[0l]]
{-855} k!0@4#4 == 2
{-856} states_equals_A_states_plus_B_inputs_result#64 == states_equals_A_states_plus_B_inputs_result#63 WITH [0l:=0.02099609375 * _controller_states#3[2l] + states_equals_A_states_plus_B_inputs_result#63[0l]]
{-857} states_equals_A_states_plus_B_inputs_result#65 == states_equals_A_states_plus_B_inputs_result#64 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#64[0l]]
{-858} k!0@4#5 == 3
{-859} i!0@4#3 == 1
{-860} k!0@4#8 == 0
{-861} states_equals_A_states_plus_B_inputs_result#66 == states_equals_A_states_plus_B_inputs_result#65 WITH [1l:=0.125 * _controller_states#3[0l] + states_equals_A_states_plus_B_inputs_result#65[1l]]
{-862} states_equals_A_states_plus_B_inputs_result#67 == states_equals_A_states_plus_B_inputs_result#66 WITH [1l:=states_equals_A_states_plus_B_inputs_result#66[1l]]
{-863} k!0@4#9 == 1
{-864} states_equals_A_states_plus_B_inputs_result#68 == states_equals_A_states_plus_B_inputs_result#67 WITH [1l:=states_equals_A_states_plus_B_inputs_result#67[1l]]
{-865} states_equals_A_states_plus_B_inputs_result#69 == states_equals_A_states_plus_B_inputs_result#68 WITH [1l:=states_equals_A_states_plus_B_inputs_result#68[1l]]
{-866} k!0@4#10 == 2
{-867} states_equals_A_states_plus_B_inputs_result#70 == states_equals_A_states_plus_B_inputs_result#69 WITH [1l:=states_equals_A_states_plus_B_inputs_result#69[1l]]
{-868} states_equals_A_states_plus_B_inputs_result#71 == states_equals_A_states_plus_B_inputs_result#70 WITH [1l:=states_equals_A_states_plus_B_inputs_result#70[1l]]
{-869} k!0@4#11 == 3
{-870} i!0@4#4 == 2
{-871} k!0@4#14 == 0
{-872} states_equals_A_states_plus_B_inputs_result#72 == states_equals_A_states_plus_B_inputs_result#71 WITH [2l:=states_equals_A_states_plus_B_inputs_result#71[2l]]
{-873} states_equals_A_states_plus_B_inputs_result#73 == states_equals_A_states_plus_B_inputs_result#72 WITH [2l:=states_equals_A_states_plus_B_inputs_result#72[2l]]
{-874} k!0@4#15 == 1
{-875} states_equals_A_states_plus_B_inputs_result#74 == states_equals_A_states_plus_B_inputs_result#73 WITH [2l:=0.015625 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#73[2l]]
{-876} states_equals_A_states_plus_B_inputs_result#75 == states_equals_A_states_plus_B_inputs_result#74 WITH [2l:=states_equals_A_states_plus_B_inputs_result#74[2l]]
{-877} k!0@4#16 == 2
{-878} states_equals_A_states_plus_B_inputs_result#76 == states_equals_A_states_plus_B_inputs_result#75 WITH [2l:=states_equals_A_states_plus_B_inputs_result#75[2l]]
{-879} states_equals_A_states_plus_B_inputs_result#77 == states_equals_A_states_plus_B_inputs_result#76 WITH [2l:=states_equals_A_states_plus_B_inputs_result#76[2l]]
{-880} k!0@4#17 == 3
{-881} i!0@4#5 == 3
{-882} k!0@4#20 == k!0@4#18
{-883} _controller_states#4 == states_equals_A_states_plus_B_inputs_result#77
{-884} \guard#29 == _controller_states#4[0l] < 1
{-885} tmp_if_expr$1!0@4#2 == _controller_states#4[0l] > -1
{-886} tmp_if_expr$1!0@4#3 == tmp_if_expr$1!0@4#1
{-887} tmp_if_expr$1!0@4#4 == FALSE
{-888} tmp_if_expr$1!0@4#5 == (\guard#29 && tmp_if_expr$1!0@4#2)
{-889} \guard#30 == _controller_states#4[1l] < 1
{-890} tmp_if_expr$2!0@4#2 == _controller_states#4[1l] > -1
{-891} tmp_if_expr$2!0@4#3 == tmp_if_expr$2!0@4#1
{-892} tmp_if_expr$2!0@4#4 == FALSE
{-893} tmp_if_expr$2!0@4#5 == (\guard#30 && tmp_if_expr$2!0@4#2)
{-894} \guard#31 == _controller_states#4[2l] < 1
{-895} tmp_if_expr$3!0@4#2 == _controller_states#4[2l] > -1
{-896} tmp_if_expr$3!0@4#3 == tmp_if_expr$3!0@4#1
{-897} tmp_if_expr$3!0@4#4 == FALSE
{-898} tmp_if_expr$3!0@4#5 == (\guard#31 && tmp_if_expr$3!0@4#2)
{-899} i!0@1#44 == 0
{-900} \guard#32 == _controller_states#4[0l] > 1
{-901} tmp_if_expr$2!0@1#62 == TRUE
{-902} tmp_if_expr$2!0@1#63 == tmp_if_expr$2!0@1#61
{-903} tmp_if_expr$2!0@1#64 == _controller_states#4[0l] < -1
{-904} tmp_if_expr$2!0@1#65 == (\guard#32 || tmp_if_expr$2!0@1#64)
{-905} check_safety#return_value!0#19 == 0
{-906} check_safety#return_value!0#20 == check_safety#return_value!0#18
{-907} i!0@1#46 == 0
{-908} k!0@1#31 == 3
{-909} i!0@1#47 == 1
{-910} \guard#33 == _controller_states#4[1l] > 1
{-911} tmp_if_expr$2!0@1#68 == TRUE
{-912} tmp_if_expr$2!0@1#69 == tmp_if_expr$2!0@1#67
{-913} tmp_if_expr$2!0@1#70 == _controller_states#4[1l] < -1
{-914} tmp_if_expr$2!0@1#71 == (\guard#33 || tmp_if_expr$2!0@1#70)
{-915} check_safety#return_value!0#21 == 0
{-916} check_safety#return_value!0#22 == check_safety#return_value!0#20
{-917} i!0@1#49 == 1
{-918} k!0@1#33 == 3
{-919} i!0@1#50 == 2
{-920} \guard#34 == _controller_states#4[2l] > 1
{-921} tmp_if_expr$2!0@1#74 == TRUE
{-922} tmp_if_expr$2!0@1#75 == tmp_if_expr$2!0@1#73
{-923} tmp_if_expr$2!0@1#76 == _controller_states#4[2l] < -1
{-924} tmp_if_expr$2!0@1#77 == (\guard#34 || tmp_if_expr$2!0@1#76)
{-925} check_safety#return_value!0#23 == 0
{-926} check_safety#return_value!0#24 == check_safety#return_value!0#22
{-927} i!0@1#52 == 2
{-928} k!0@1#35 == 3
{-929} i!0@1#53 == 3
{-930} i!0@1#55 == 3
{-931} k!0@1#37 == 3
{-932} tmp_if_expr$2!0@1#80 == tmp_if_expr$2!0@1#78
{-933} k!0@1#38 == 4
{-934} result_fxp!0@5#2 == 0
{-935} k!0@5#2 == 0
{-936} result_fxp!0@5#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l]
{-937} _controller_inputs#14 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l]))
{-938} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#14 < 1f && (float)_controller_inputs#14 > -1f
{-939} k!0@5#3 == 1
{-940} result_fxp!0@5#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l]
{-941} _controller_inputs#15 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l]))
{-942} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#15 < 1f && (float)_controller_inputs#15 > -1f
{-943} k!0@5#4 == 2
{-944} result_fxp!0@5#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[2l]
{-945} _controller_inputs#16 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[2l]))
{-946} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#16 < 1f && (float)_controller_inputs#16 > -1f
{-947} k!0@5#5 == 3
{-948} states_equals_A_states_plus_B_inputs_result#78 == ARRAY_OF(0)
{-949} i!0@5#2 == 0
{-950} k!0@5#2 == 0
{-951} states_equals_A_states_plus_B_inputs_result#79 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#4[0l]]
{-952} states_equals_A_states_plus_B_inputs_result#80 == states_equals_A_states_plus_B_inputs_result#79 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#79[0l]]
{-953} k!0@5#3 == 1
{-954} states_equals_A_states_plus_B_inputs_result#81 == states_equals_A_states_plus_B_inputs_result#80 WITH [0l:=0.07568359375 * _controller_states#4[1l] + states_equals_A_states_plus_B_inputs_result#80[0l]]
{-955} states_equals_A_states_plus_B_inputs_result#82 == states_equals_A_states_plus_B_inputs_result#81 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#81[0l]]
{-956} k!0@5#4 == 2
{-957} states_equals_A_states_plus_B_inputs_result#83 == states_equals_A_states_plus_B_inputs_result#82 WITH [0l:=0.02099609375 * _controller_states#4[2l] + states_equals_A_states_plus_B_inputs_result#82[0l]]
{-958} states_equals_A_states_plus_B_inputs_result#84 == states_equals_A_states_plus_B_inputs_result#83 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#83[0l]]
{-959} k!0@5#5 == 3
{-960} i!0@5#3 == 1
{-961} k!0@5#8 == 0
{-962} states_equals_A_states_plus_B_inputs_result#85 == states_equals_A_states_plus_B_inputs_result#84 WITH [1l:=0.125 * _controller_states#4[0l] + states_equals_A_states_plus_B_inputs_result#84[1l]]
{-963} states_equals_A_states_plus_B_inputs_result#86 == states_equals_A_states_plus_B_inputs_result#85 WITH [1l:=states_equals_A_states_plus_B_inputs_result#85[1l]]
{-964} k!0@5#9 == 1
{-965} states_equals_A_states_plus_B_inputs_result#87 == states_equals_A_states_plus_B_inputs_result#86 WITH [1l:=states_equals_A_states_plus_B_inputs_result#86[1l]]
{-966} states_equals_A_states_plus_B_inputs_result#88 == states_equals_A_states_plus_B_inputs_result#87 WITH [1l:=states_equals_A_states_plus_B_inputs_result#87[1l]]
{-967} k!0@5#10 == 2
{-968} states_equals_A_states_plus_B_inputs_result#89 == states_equals_A_states_plus_B_inputs_result#88 WITH [1l:=states_equals_A_states_plus_B_inputs_result#88[1l]]
{-969} states_equals_A_states_plus_B_inputs_result#90 == states_equals_A_states_plus_B_inputs_result#89 WITH [1l:=states_equals_A_states_plus_B_inputs_result#89[1l]]
{-970} k!0@5#11 == 3
{-971} i!0@5#4 == 2
{-972} k!0@5#14 == 0
{-973} states_equals_A_states_plus_B_inputs_result#91 == states_equals_A_states_plus_B_inputs_result#90 WITH [2l:=states_equals_A_states_plus_B_inputs_result#90[2l]]
{-974} states_equals_A_states_plus_B_inputs_result#92 == states_equals_A_states_plus_B_inputs_result#91 WITH [2l:=states_equals_A_states_plus_B_inputs_result#91[2l]]
{-975} k!0@5#15 == 1
{-976} states_equals_A_states_plus_B_inputs_result#93 == states_equals_A_states_plus_B_inputs_result#92 WITH [2l:=0.015625 * _controller_states#4[1l] + states_equals_A_states_plus_B_inputs_result#92[2l]]
{-977} states_equals_A_states_plus_B_inputs_result#94 == states_equals_A_states_plus_B_inputs_result#93 WITH [2l:=states_equals_A_states_plus_B_inputs_result#93[2l]]
{-978} k!0@5#16 == 2
{-979} states_equals_A_states_plus_B_inputs_result#95 == states_equals_A_states_plus_B_inputs_result#94 WITH [2l:=states_equals_A_states_plus_B_inputs_result#94[2l]]
{-980} states_equals_A_states_plus_B_inputs_result#96 == states_equals_A_states_plus_B_inputs_result#95 WITH [2l:=states_equals_A_states_plus_B_inputs_result#95[2l]]
{-981} k!0@5#17 == 3
{-982} i!0@5#5 == 3
{-983} k!0@5#20 == k!0@5#18
{-984} _controller_states#5 == states_equals_A_states_plus_B_inputs_result#96
{-985} \guard#35 == _controller_states#5[0l] < 1
{-986} tmp_if_expr$1!0@5#2 == _controller_states#5[0l] > -1
{-987} tmp_if_expr$1!0@5#3 == tmp_if_expr$1!0@5#1
{-988} tmp_if_expr$1!0@5#4 == FALSE
{-989} tmp_if_expr$1!0@5#5 == (\guard#35 && tmp_if_expr$1!0@5#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> tmp_if_expr$1!0@5#5

file discretization_check.c line 254 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
{-793} \guard#25 == _controller_states#3[2l] < 1
{-794} tmp_if_expr$3!0@3#2 == _controller_states#3[2l] > -1
{-795} tmp_if_expr$3!0@3#3 == tmp_if_expr$3!0@3#1
{-796} tmp_if_expr$3!0@3#4 == FALSE
{-797} tmp_if_expr$3!0@3#5 == (\guard#25 && tmp_if_expr$3!0@3#2)
{-798} i!0@1#30 == 0
{-799} \guard#26 == _controller_states#3[0l] > 1
{-800} tmp_if_expr$2!0@1#42 == TRUE
{-801} tmp_if_expr$2!0@1#43 == tmp_if_expr$2!0@1#41
{-802} tmp_if_expr$2!0@1#44 == _controller_states#3[0l] < -1
{-803} tmp_if_expr$2!0@1#45 == (\guard#26 || tmp_if_expr$2!0@1#44)
{-804} check_safety#return_value!0#13 == 0
{-805} check_safety#return_value!0#14 == check_safety#return_value!0#12
{-806} i!0@1#32 == 0
{-807} k!0@1#22 == 2
{-808} i!0@1#33 == 1
{-809} \guard#27 == _controller_states#3[1l] > 1
{-810} tmp_if_expr$2!0@1#48 == TRUE
{-811} tmp_if_expr$2!0@1#49 == tmp_if_expr$2!0@1#47
{-812} tmp_if_expr$2!0@1#50 == _controller_states#3[1l] < -1
{-813} tmp_if_expr$2!0@1#51 == (\guard#27 || tmp_if_expr$2!0@1#50)
{-814} check_safety#return_value!0#15 == 0
{-815} check_safety#return_value!0#16 == check_safety#return_value!0#14
{-816} i!0@1#35 == 1
{-817} k!0@1#24 == 2
{-818} i!0@1#36 == 2
{-819} \guard#28 == _controller_states#3[2l] > 1
{-820} tmp_if_expr$2!0@1#54 == TRUE
{-821} tmp_if_expr$2!0@1#55 == tmp_if_expr$2!0@1#53
{-822} tmp_if_expr$2!0@1#56 == _controller_states#3[2l] < -1
{-823} tmp_if_expr$2!0@1#57 == (\guard#28 || tmp_if_expr$2!0@1#56)
{-824} check_safety#return_value!0#17 == 0
{-825} check_safety#return_value!0#18 == check_safety#return_value!0#16
{-826} i!0@1#38 == 2
{-827} k!0@1#26 == 2
{-828} i!0@1#39 == 3
{-829} i!0@1#41 == 3
{-830} k!0@1#28 == 2
{-831} tmp_if_expr$2!0@1#60 == tmp_if_expr$2!0@1#58
{-832} k!0@1#29 == 3
{-833} result_fxp!0@4#2 == 0
{-834} k!0@4#2 == 0
{-835} result_fxp!0@4#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]
{-836} _controller_inputs#11 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]))
{-837} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#11 < 1f && (float)_controller_inputs#11 > -1f
{-838} k!0@4#3 == 1
{-839} result_fxp!0@4#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]
{-840} _controller_inputs#12 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]))
{-841} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#12 < 1f && (float)_controller_inputs#12 > -1f
{-842} k!0@4#4 == 2
{-843} result_fxp!0@4#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]
{-844} _controller_inputs#13 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]))
{-845} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#13 < 1f && (float)_controller_inputs#13 > -1f
{-846} k!0@4#5 == 3
{-847} states_equals_A_states_plus_B_inputs_result#59 == ARRAY_OF(0)
{-848} i!0@4#2 == 0
{-849} k!0@4#2 == 0
{-850} states_equals_A_states_plus_B_inputs_result#60 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#3[0l]]
{-851} states_equals_A_states_plus_B_inputs_result#61 == states_equals_A_states_plus_B_inputs_result#60 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#60[0l]]
{-852} k!0@4#3 == 1
{-853} states_equals_A_states_plus_B_inputs_result#62 == states_equals_A_states_plus_B_inputs_result#61 WITH [0l:=0.07568359375 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#61[0l]]
{-854} states_equals_A_states_plus_B_inputs_result#63 == states_equals_A_states_plus_B_inputs_result#62 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#62[0l]]
{-855} k!0@4#4 == 2
{-856} states_equals_A_states_plus_B_inputs_result#64 == states_equals_A_states_plus_B_inputs_result#63 WITH [0l:=0.02099609375 * _controller_states#3[2l] + states_equals_A_states_plus_B_inputs_result#63[0l]]
{-857} states_equals_A_states_plus_B_inputs_result#65 == states_equals_A_states_plus_B_inputs_result#64 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#64[0l]]
{-858} k!0@4#5 == 3
{-859} i!0@4#3 == 1
{-860} k!0@4#8 == 0
{-861} states_equals_A_states_plus_B_inputs_result#66 == states_equals_A_states_plus_B_inputs_result#65 WITH [1l:=0.125 * _controller_states#3[0l] + states_equals_A_states_plus_B_inputs_result#65[1l]]
{-862} states_equals_A_states_plus_B_inputs_result#67 == states_equals_A_states_plus_B_inputs_result#66 WITH [1l:=states_equals_A_states_plus_B_inputs_result#66[1l]]
{-863} k!0@4#9 == 1
{-864} states_equals_A_states_plus_B_inputs_result#68 == states_equals_A_states_plus_B_inputs_result#67 WITH [1l:=states_equals_A_states_plus_B_inputs_result#67[1l]]
{-865} states_equals_A_states_plus_B_inputs_result#69 == states_equals_A_states_plus_B_inputs_result#68 WITH [1l:=states_equals_A_states_plus_B_inputs_result#68[1l]]
{-866} k!0@4#10 == 2
{-867} states_equals_A_states_plus_B_inputs_result#70 == states_equals_A_states_plus_B_inputs_result#69 WITH [1l:=states_equals_A_states_plus_B_inputs_result#69[1l]]
{-868} states_equals_A_states_plus_B_inputs_result#71 == states_equals_A_states_plus_B_inputs_result#70 WITH [1l:=states_equals_A_states_plus_B_inputs_result#70[1l]]
{-869} k!0@4#11 == 3
{-870} i!0@4#4 == 2
{-871} k!0@4#14 == 0
{-872} states_equals_A_states_plus_B_inputs_result#72 == states_equals_A_states_plus_B_inputs_result#71 WITH [2l:=states_equals_A_states_plus_B_inputs_result#71[2l]]
{-873} states_equals_A_states_plus_B_inputs_result#73 == states_equals_A_states_plus_B_inputs_result#72 WITH [2l:=states_equals_A_states_plus_B_inputs_result#72[2l]]
{-874} k!0@4#15 == 1
{-875} states_equals_A_states_plus_B_inputs_result#74 == states_equals_A_states_plus_B_inputs_result#73 WITH [2l:=0.015625 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#73[2l]]
{-876} states_equals_A_states_plus_B_inputs_result#75 == states_equals_A_states_plus_B_inputs_result#74 WITH [2l:=states_equals_A_states_plus_B_inputs_result#74[2l]]
{-877} k!0@4#16 == 2
{-878} states_equals_A_states_plus_B_inputs_result#76 == states_equals_A_states_plus_B_inputs_result#75 WITH [2l:=states_equals_A_states_plus_B_inputs_result#75[2l]]
{-879} states_equals_A_states_plus_B_inputs_result#77 == states_equals_A_states_plus_B_inputs_result#76 WITH [2l:=states_equals_A_states_plus_B_inputs_result#76[2l]]
{-880} k!0@4#17 == 3
{-881} i!0@4#5 == 3
{-882} k!0@4#20 == k!0@4#18
{-883} _controller_states#4 == states_equals_A_states_plus_B_inputs_result#77
{-884} \guard#29 == _controller_states#4[0l] < 1
{-885} tmp_if_expr$1!0@4#2 == _controller_states#4[0l] > -1
{-886} tmp_if_expr$1!0@4#3 == tmp_if_expr$1!0@4#1
{-887} tmp_if_expr$1!0@4#4 == FALSE
{-888} tmp_if_expr$1!0@4#5 == (\guard#29 && tmp_if_expr$1!0@4#2)
{-889} \guard#30 == _controller_states#4[1l] < 1
{-890} tmp_if_expr$2!0@4#2 == _controller_states#4[1l] > -1
{-891} tmp_if_expr$2!0@4#3 == tmp_if_expr$2!0@4#1
{-892} tmp_if_expr$2!0@4#4 == FALSE
{-893} tmp_if_expr$2!0@4#5 == (\guard#30 && tmp_if_expr$2!0@4#2)
{-894} \guard#31 == _controller_states#4[2l] < 1
{-895} tmp_if_expr$3!0@4#2 == _controller_states#4[2l] > -1
{-896} tmp_if_expr$3!0@4#3 == tmp_if_expr$3!0@4#1
{-897} tmp_if_expr$3!0@4#4 == FALSE
{-898} tmp_if_expr$3!0@4#5 == (\guard#31 && tmp_if_expr$3!0@4#2)
{-899} i!0@1#44 == 0
{-900} \guard#32 == _controller_states#4[0l] > 1
{-901} tmp_if_expr$2!0@1#62 == TRUE
{-902} tmp_if_expr$2!0@1#63 == tmp_if_expr$2!0@1#61
{-903} tmp_if_expr$2!0@1#64 == _controller_states#4[0l] < -1
{-904} tmp_if_expr$2!0@1#65 == (\guard#32 || tmp_if_expr$2!0@1#64)
{-905} check_safety#return_value!0#19 == 0
{-906} check_safety#return_value!0#20 == check_safety#return_value!0#18
{-907} i!0@1#46 == 0
{-908} k!0@1#31 == 3
{-909} i!0@1#47 == 1
{-910} \guard#33 == _controller_states#4[1l] > 1
{-911} tmp_if_expr$2!0@1#68 == TRUE
{-912} tmp_if_expr$2!0@1#69 == tmp_if_expr$2!0@1#67
{-913} tmp_if_expr$2!0@1#70 == _controller_states#4[1l] < -1
{-914} tmp_if_expr$2!0@1#71 == (\guard#33 || tmp_if_expr$2!0@1#70)
{-915} check_safety#return_value!0#21 == 0
{-916} check_safety#return_value!0#22 == check_safety#return_value!0#20
{-917} i!0@1#49 == 1
{-918} k!0@1#33 == 3
{-919} i!0@1#50 == 2
{-920} \guard#34 == _controller_states#4[2l] > 1
{-921} tmp_if_expr$2!0@1#74 == TRUE
{-922} tmp_if_expr$2!0@1#75 == tmp_if_expr$2!0@1#73
{-923} tmp_if_expr$2!0@1#76 == _controller_states#4[2l] < -1
{-924} tmp_if_expr$2!0@1#77 == (\guard#34 || tmp_if_expr$2!0@1#76)
{-925} check_safety#return_value!0#23 == 0
{-926} check_safety#return_value!0#24 == check_safety#return_value!0#22
{-927} i!0@1#52 == 2
{-928} k!0@1#35 == 3
{-929} i!0@1#53 == 3
{-930} i!0@1#55 == 3
{-931} k!0@1#37 == 3
{-932} tmp_if_expr$2!0@1#80 == tmp_if_expr$2!0@1#78
{-933} k!0@1#38 == 4
{-934} result_fxp!0@5#2 == 0
{-935} k!0@5#2 == 0
{-936} result_fxp!0@5#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l]
{-937} _controller_inputs#14 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l]))
{-938} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#14 < 1f && (float)_controller_inputs#14 > -1f
{-939} k!0@5#3 == 1
{-940} result_fxp!0@5#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l]
{-941} _controller_inputs#15 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l]))
{-942} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#15 < 1f && (float)_controller_inputs#15 > -1f
{-943} k!0@5#4 == 2
{-944} result_fxp!0@5#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[2l]
{-945} _controller_inputs#16 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[2l]))
{-946} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#16 < 1f && (float)_controller_inputs#16 > -1f
{-947} k!0@5#5 == 3
{-948} states_equals_A_states_plus_B_inputs_result#78 == ARRAY_OF(0)
{-949} i!0@5#2 == 0
{-950} k!0@5#2 == 0
{-951} states_equals_A_states_plus_B_inputs_result#79 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#4[0l]]
{-952} states_equals_A_states_plus_B_inputs_result#80 == states_equals_A_states_plus_B_inputs_result#79 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#79[0l]]
{-953} k!0@5#3 == 1
{-954} states_equals_A_states_plus_B_inputs_result#81 == states_equals_A_states_plus_B_inputs_result#80 WITH [0l:=0.07568359375 * _controller_states#4[1l] + states_equals_A_states_plus_B_inputs_result#80[0l]]
{-955} states_equals_A_states_plus_B_inputs_result#82 == states_equals_A_states_plus_B_inputs_result#81 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#81[0l]]
{-956} k!0@5#4 == 2
{-957} states_equals_A_states_plus_B_inputs_result#83 == states_equals_A_states_plus_B_inputs_result#82 WITH [0l:=0.02099609375 * _controller_states#4[2l] + states_equals_A_states_plus_B_inputs_result#82[0l]]
{-958} states_equals_A_states_plus_B_inputs_result#84 == states_equals_A_states_plus_B_inputs_result#83 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#83[0l]]
{-959} k!0@5#5 == 3
{-960} i!0@5#3 == 1
{-961} k!0@5#8 == 0
{-962} states_equals_A_states_plus_B_inputs_result#85 == states_equals_A_states_plus_B_inputs_result#84 WITH [1l:=0.125 * _controller_states#4[0l] + states_equals_A_states_plus_B_inputs_result#84[1l]]
{-963} states_equals_A_states_plus_B_inputs_result#86 == states_equals_A_states_plus_B_inputs_result#85 WITH [1l:=states_equals_A_states_plus_B_inputs_result#85[1l]]
{-964} k!0@5#9 == 1
{-965} states_equals_A_states_plus_B_inputs_result#87 == states_equals_A_states_plus_B_inputs_result#86 WITH [1l:=states_equals_A_states_plus_B_inputs_result#86[1l]]
{-966} states_equals_A_states_plus_B_inputs_result#88 == states_equals_A_states_plus_B_inputs_result#87 WITH [1l:=states_equals_A_states_plus_B_inputs_result#87[1l]]
{-967} k!0@5#10 == 2
{-968} states_equals_A_states_plus_B_inputs_result#89 == states_equals_A_states_plus_B_inputs_result#88 WITH [1l:=states_equals_A_states_plus_B_inputs_result#88[1l]]
{-969} states_equals_A_states_plus_B_inputs_result#90 == states_equals_A_states_plus_B_inputs_result#89 WITH [1l:=states_equals_A_states_plus_B_inputs_result#89[1l]]
{-970} k!0@5#11 == 3
{-971} i!0@5#4 == 2
{-972} k!0@5#14 == 0
{-973} states_equals_A_states_plus_B_inputs_result#91 == states_equals_A_states_plus_B_inputs_result#90 WITH [2l:=states_equals_A_states_plus_B_inputs_result#90[2l]]
{-974} states_equals_A_states_plus_B_inputs_result#92 == states_equals_A_states_plus_B_inputs_result#91 WITH [2l:=states_equals_A_states_plus_B_inputs_result#91[2l]]
{-975} k!0@5#15 == 1
{-976} states_equals_A_states_plus_B_inputs_result#93 == states_equals_A_states_plus_B_inputs_result#92 WITH [2l:=0.015625 * _controller_states#4[1l] + states_equals_A_states_plus_B_inputs_result#92[2l]]
{-977} states_equals_A_states_plus_B_inputs_result#94 == states_equals_A_states_plus_B_inputs_result#93 WITH [2l:=states_equals_A_states_plus_B_inputs_result#93[2l]]
{-978} k!0@5#16 == 2
{-979} states_equals_A_states_plus_B_inputs_result#95 == states_equals_A_states_plus_B_inputs_result#94 WITH [2l:=states_equals_A_states_plus_B_inputs_result#94[2l]]
{-980} states_equals_A_states_plus_B_inputs_result#96 == states_equals_A_states_plus_B_inputs_result#95 WITH [2l:=states_equals_A_states_plus_B_inputs_result#95[2l]]
{-981} k!0@5#17 == 3
{-982} i!0@5#5 == 3
{-983} k!0@5#20 == k!0@5#18
{-984} _controller_states#5 == states_equals_A_states_plus_B_inputs_result#96
{-985} \guard#35 == _controller_states#5[0l] < 1
{-986} tmp_if_expr$1!0@5#2 == _controller_states#5[0l] > -1
{-987} tmp_if_expr$1!0@5#3 == tmp_if_expr$1!0@5#1
{-988} tmp_if_expr$1!0@5#4 == FALSE
{-989} tmp_if_expr$1!0@5#5 == (\guard#35 && tmp_if_expr$1!0@5#2)
{-990} \guard#36 == _controller_states#5[1l] < 1
{-991} tmp_if_expr$2!0@5#2 == _controller_states#5[1l] > -1
{-992} tmp_if_expr$2!0@5#3 == tmp_if_expr$2!0@5#1
{-993} tmp_if_expr$2!0@5#4 == FALSE
{-994} tmp_if_expr$2!0@5#5 == (\guard#36 && tmp_if_expr$2!0@5#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> tmp_if_expr$2!0@5#5

file discretization_check.c line 256 function states_equals_A_states_plus_B_inputs
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
{-793} \guard#25 == _controller_states#3[2l] < 1
{-794} tmp_if_expr$3!0@3#2 == _controller_states#3[2l] > -1
{-795} tmp_if_expr$3!0@3#3 == tmp_if_expr$3!0@3#1
{-796} tmp_if_expr$3!0@3#4 == FALSE
{-797} tmp_if_expr$3!0@3#5 == (\guard#25 && tmp_if_expr$3!0@3#2)
{-798} i!0@1#30 == 0
{-799} \guard#26 == _controller_states#3[0l] > 1
{-800} tmp_if_expr$2!0@1#42 == TRUE
{-801} tmp_if_expr$2!0@1#43 == tmp_if_expr$2!0@1#41
{-802} tmp_if_expr$2!0@1#44 == _controller_states#3[0l] < -1
{-803} tmp_if_expr$2!0@1#45 == (\guard#26 || tmp_if_expr$2!0@1#44)
{-804} check_safety#return_value!0#13 == 0
{-805} check_safety#return_value!0#14 == check_safety#return_value!0#12
{-806} i!0@1#32 == 0
{-807} k!0@1#22 == 2
{-808} i!0@1#33 == 1
{-809} \guard#27 == _controller_states#3[1l] > 1
{-810} tmp_if_expr$2!0@1#48 == TRUE
{-811} tmp_if_expr$2!0@1#49 == tmp_if_expr$2!0@1#47
{-812} tmp_if_expr$2!0@1#50 == _controller_states#3[1l] < -1
{-813} tmp_if_expr$2!0@1#51 == (\guard#27 || tmp_if_expr$2!0@1#50)
{-814} check_safety#return_value!0#15 == 0
{-815} check_safety#return_value!0#16 == check_safety#return_value!0#14
{-816} i!0@1#35 == 1
{-817} k!0@1#24 == 2
{-818} i!0@1#36 == 2
{-819} \guard#28 == _controller_states#3[2l] > 1
{-820} tmp_if_expr$2!0@1#54 == TRUE
{-821} tmp_if_expr$2!0@1#55 == tmp_if_expr$2!0@1#53
{-822} tmp_if_expr$2!0@1#56 == _controller_states#3[2l] < -1
{-823} tmp_if_expr$2!0@1#57 == (\guard#28 || tmp_if_expr$2!0@1#56)
{-824} check_safety#return_value!0#17 == 0
{-825} check_safety#return_value!0#18 == check_safety#return_value!0#16
{-826} i!0@1#38 == 2
{-827} k!0@1#26 == 2
{-828} i!0@1#39 == 3
{-829} i!0@1#41 == 3
{-830} k!0@1#28 == 2
{-831} tmp_if_expr$2!0@1#60 == tmp_if_expr$2!0@1#58
{-832} k!0@1#29 == 3
{-833} result_fxp!0@4#2 == 0
{-834} k!0@4#2 == 0
{-835} result_fxp!0@4#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]
{-836} _controller_inputs#11 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]))
{-837} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#11 < 1f && (float)_controller_inputs#11 > -1f
{-838} k!0@4#3 == 1
{-839} result_fxp!0@4#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]
{-840} _controller_inputs#12 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]))
{-841} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#12 < 1f && (float)_controller_inputs#12 > -1f
{-842} k!0@4#4 == 2
{-843} result_fxp!0@4#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]
{-844} _controller_inputs#13 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]))
{-845} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#13 < 1f && (float)_controller_inputs#13 > -1f
{-846} k!0@4#5 == 3
{-847} states_equals_A_states_plus_B_inputs_result#59 == ARRAY_OF(0)
{-848} i!0@4#2 == 0
{-849} k!0@4#2 == 0
{-850} states_equals_A_states_plus_B_inputs_result#60 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#3[0l]]
{-851} states_equals_A_states_plus_B_inputs_result#61 == states_equals_A_states_plus_B_inputs_result#60 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#60[0l]]
{-852} k!0@4#3 == 1
{-853} states_equals_A_states_plus_B_inputs_result#62 == states_equals_A_states_plus_B_inputs_result#61 WITH [0l:=0.07568359375 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#61[0l]]
{-854} states_equals_A_states_plus_B_inputs_result#63 == states_equals_A_states_plus_B_inputs_result#62 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#62[0l]]
{-855} k!0@4#4 == 2
{-856} states_equals_A_states_plus_B_inputs_result#64 == states_equals_A_states_plus_B_inputs_result#63 WITH [0l:=0.02099609375 * _controller_states#3[2l] + states_equals_A_states_plus_B_inputs_result#63[0l]]
{-857} states_equals_A_states_plus_B_inputs_result#65 == states_equals_A_states_plus_B_inputs_result#64 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#64[0l]]
{-858} k!0@4#5 == 3
{-859} i!0@4#3 == 1
{-860} k!0@4#8 == 0
{-861} states_equals_A_states_plus_B_inputs_result#66 == states_equals_A_states_plus_B_inputs_result#65 WITH [1l:=0.125 * _controller_states#3[0l] + states_equals_A_states_plus_B_inputs_result#65[1l]]
{-862} states_equals_A_states_plus_B_inputs_result#67 == states_equals_A_states_plus_B_inputs_result#66 WITH [1l:=states_equals_A_states_plus_B_inputs_result#66[1l]]
{-863} k!0@4#9 == 1
{-864} states_equals_A_states_plus_B_inputs_result#68 == states_equals_A_states_plus_B_inputs_result#67 WITH [1l:=states_equals_A_states_plus_B_inputs_result#67[1l]]
{-865} states_equals_A_states_plus_B_inputs_result#69 == states_equals_A_states_plus_B_inputs_result#68 WITH [1l:=states_equals_A_states_plus_B_inputs_result#68[1l]]
{-866} k!0@4#10 == 2
{-867} states_equals_A_states_plus_B_inputs_result#70 == states_equals_A_states_plus_B_inputs_result#69 WITH [1l:=states_equals_A_states_plus_B_inputs_result#69[1l]]
{-868} states_equals_A_states_plus_B_inputs_result#71 == states_equals_A_states_plus_B_inputs_result#70 WITH [1l:=states_equals_A_states_plus_B_inputs_result#70[1l]]
{-869} k!0@4#11 == 3
{-870} i!0@4#4 == 2
{-871} k!0@4#14 == 0
{-872} states_equals_A_states_plus_B_inputs_result#72 == states_equals_A_states_plus_B_inputs_result#71 WITH [2l:=states_equals_A_states_plus_B_inputs_result#71[2l]]
{-873} states_equals_A_states_plus_B_inputs_result#73 == states_equals_A_states_plus_B_inputs_result#72 WITH [2l:=states_equals_A_states_plus_B_inputs_result#72[2l]]
{-874} k!0@4#15 == 1
{-875} states_equals_A_states_plus_B_inputs_result#74 == states_equals_A_states_plus_B_inputs_result#73 WITH [2l:=0.015625 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#73[2l]]
{-876} states_equals_A_states_plus_B_inputs_result#75 == states_equals_A_states_plus_B_inputs_result#74 WITH [2l:=states_equals_A_states_plus_B_inputs_result#74[2l]]
{-877} k!0@4#16 == 2
{-878} states_equals_A_states_plus_B_inputs_result#76 == states_equals_A_states_plus_B_inputs_result#75 WITH [2l:=states_equals_A_states_plus_B_inputs_result#75[2l]]
{-879} states_equals_A_states_plus_B_inputs_result#77 == states_equals_A_states_plus_B_inputs_result#76 WITH [2l:=states_equals_A_states_plus_B_inputs_result#76[2l]]
{-880} k!0@4#17 == 3
{-881} i!0@4#5 == 3
{-882} k!0@4#20 == k!0@4#18
{-883} _controller_states#4 == states_equals_A_states_plus_B_inputs_result#77
{-884} \guard#29 == _controller_states#4[0l] < 1
{-885} tmp_if_expr$1!0@4#2 == _controller_states#4[0l] > -1
{-886} tmp_if_expr$1!0@4#3 == tmp_if_expr$1!0@4#1
{-887} tmp_if_expr$1!0@4#4 == FALSE
{-888} tmp_if_expr$1!0@4#5 == (\guard#29 && tmp_if_expr$1!0@4#2)
{-889} \guard#30 == _controller_states#4[1l] < 1
{-890} tmp_if_expr$2!0@4#2 == _controller_states#4[1l] > -1
{-891} tmp_if_expr$2!0@4#3 == tmp_if_expr$2!0@4#1
{-892} tmp_if_expr$2!0@4#4 == FALSE
{-893} tmp_if_expr$2!0@4#5 == (\guard#30 && tmp_if_expr$2!0@4#2)
{-894} \guard#31 == _controller_states#4[2l] < 1
{-895} tmp_if_expr$3!0@4#2 == _controller_states#4[2l] > -1
{-896} tmp_if_expr$3!0@4#3 == tmp_if_expr$3!0@4#1
{-897} tmp_if_expr$3!0@4#4 == FALSE
{-898} tmp_if_expr$3!0@4#5 == (\guard#31 && tmp_if_expr$3!0@4#2)
{-899} i!0@1#44 == 0
{-900} \guard#32 == _controller_states#4[0l] > 1
{-901} tmp_if_expr$2!0@1#62 == TRUE
{-902} tmp_if_expr$2!0@1#63 == tmp_if_expr$2!0@1#61
{-903} tmp_if_expr$2!0@1#64 == _controller_states#4[0l] < -1
{-904} tmp_if_expr$2!0@1#65 == (\guard#32 || tmp_if_expr$2!0@1#64)
{-905} check_safety#return_value!0#19 == 0
{-906} check_safety#return_value!0#20 == check_safety#return_value!0#18
{-907} i!0@1#46 == 0
{-908} k!0@1#31 == 3
{-909} i!0@1#47 == 1
{-910} \guard#33 == _controller_states#4[1l] > 1
{-911} tmp_if_expr$2!0@1#68 == TRUE
{-912} tmp_if_expr$2!0@1#69 == tmp_if_expr$2!0@1#67
{-913} tmp_if_expr$2!0@1#70 == _controller_states#4[1l] < -1
{-914} tmp_if_expr$2!0@1#71 == (\guard#33 || tmp_if_expr$2!0@1#70)
{-915} check_safety#return_value!0#21 == 0
{-916} check_safety#return_value!0#22 == check_safety#return_value!0#20
{-917} i!0@1#49 == 1
{-918} k!0@1#33 == 3
{-919} i!0@1#50 == 2
{-920} \guard#34 == _controller_states#4[2l] > 1
{-921} tmp_if_expr$2!0@1#74 == TRUE
{-922} tmp_if_expr$2!0@1#75 == tmp_if_expr$2!0@1#73
{-923} tmp_if_expr$2!0@1#76 == _controller_states#4[2l] < -1
{-924} tmp_if_expr$2!0@1#77 == (\guard#34 || tmp_if_expr$2!0@1#76)
{-925} check_safety#return_value!0#23 == 0
{-926} check_safety#return_value!0#24 == check_safety#return_value!0#22
{-927} i!0@1#52 == 2
{-928} k!0@1#35 == 3
{-929} i!0@1#53 == 3
{-930} i!0@1#55 == 3
{-931} k!0@1#37 == 3
{-932} tmp_if_expr$2!0@1#80 == tmp_if_expr$2!0@1#78
{-933} k!0@1#38 == 4
{-934} result_fxp!0@5#2 == 0
{-935} k!0@5#2 == 0
{-936} result_fxp!0@5#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l]
{-937} _controller_inputs#14 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l]))
{-938} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#14 < 1f && (float)_controller_inputs#14 > -1f
{-939} k!0@5#3 == 1
{-940} result_fxp!0@5#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l]
{-941} _controller_inputs#15 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l]))
{-942} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#15 < 1f && (float)_controller_inputs#15 > -1f
{-943} k!0@5#4 == 2
{-944} result_fxp!0@5#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[2l]
{-945} _controller_inputs#16 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[2l]))
{-946} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#16 < 1f && (float)_controller_inputs#16 > -1f
{-947} k!0@5#5 == 3
{-948} states_equals_A_states_plus_B_inputs_result#78 == ARRAY_OF(0)
{-949} i!0@5#2 == 0
{-950} k!0@5#2 == 0
{-951} states_equals_A_states_plus_B_inputs_result#79 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#4[0l]]
{-952} states_equals_A_states_plus_B_inputs_result#80 == states_equals_A_states_plus_B_inputs_result#79 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#79[0l]]
{-953} k!0@5#3 == 1
{-954} states_equals_A_states_plus_B_inputs_result#81 == states_equals_A_states_plus_B_inputs_result#80 WITH [0l:=0.07568359375 * _controller_states#4[1l] + states_equals_A_states_plus_B_inputs_result#80[0l]]
{-955} states_equals_A_states_plus_B_inputs_result#82 == states_equals_A_states_plus_B_inputs_result#81 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#81[0l]]
{-956} k!0@5#4 == 2
{-957} states_equals_A_states_plus_B_inputs_result#83 == states_equals_A_states_plus_B_inputs_result#82 WITH [0l:=0.02099609375 * _controller_states#4[2l] + states_equals_A_states_plus_B_inputs_result#82[0l]]
{-958} states_equals_A_states_plus_B_inputs_result#84 == states_equals_A_states_plus_B_inputs_result#83 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#83[0l]]
{-959} k!0@5#5 == 3
{-960} i!0@5#3 == 1
{-961} k!0@5#8 == 0
{-962} states_equals_A_states_plus_B_inputs_result#85 == states_equals_A_states_plus_B_inputs_result#84 WITH [1l:=0.125 * _controller_states#4[0l] + states_equals_A_states_plus_B_inputs_result#84[1l]]
{-963} states_equals_A_states_plus_B_inputs_result#86 == states_equals_A_states_plus_B_inputs_result#85 WITH [1l:=states_equals_A_states_plus_B_inputs_result#85[1l]]
{-964} k!0@5#9 == 1
{-965} states_equals_A_states_plus_B_inputs_result#87 == states_equals_A_states_plus_B_inputs_result#86 WITH [1l:=states_equals_A_states_plus_B_inputs_result#86[1l]]
{-966} states_equals_A_states_plus_B_inputs_result#88 == states_equals_A_states_plus_B_inputs_result#87 WITH [1l:=states_equals_A_states_plus_B_inputs_result#87[1l]]
{-967} k!0@5#10 == 2
{-968} states_equals_A_states_plus_B_inputs_result#89 == states_equals_A_states_plus_B_inputs_result#88 WITH [1l:=states_equals_A_states_plus_B_inputs_result#88[1l]]
{-969} states_equals_A_states_plus_B_inputs_result#90 == states_equals_A_states_plus_B_inputs_result#89 WITH [1l:=states_equals_A_states_plus_B_inputs_result#89[1l]]
{-970} k!0@5#11 == 3
{-971} i!0@5#4 == 2
{-972} k!0@5#14 == 0
{-973} states_equals_A_states_plus_B_inputs_result#91 == states_equals_A_states_plus_B_inputs_result#90 WITH [2l:=states_equals_A_states_plus_B_inputs_result#90[2l]]
{-974} states_equals_A_states_plus_B_inputs_result#92 == states_equals_A_states_plus_B_inputs_result#91 WITH [2l:=states_equals_A_states_plus_B_inputs_result#91[2l]]
{-975} k!0@5#15 == 1
{-976} states_equals_A_states_plus_B_inputs_result#93 == states_equals_A_states_plus_B_inputs_result#92 WITH [2l:=0.015625 * _controller_states#4[1l] + states_equals_A_states_plus_B_inputs_result#92[2l]]
{-977} states_equals_A_states_plus_B_inputs_result#94 == states_equals_A_states_plus_B_inputs_result#93 WITH [2l:=states_equals_A_states_plus_B_inputs_result#93[2l]]
{-978} k!0@5#16 == 2
{-979} states_equals_A_states_plus_B_inputs_result#95 == states_equals_A_states_plus_B_inputs_result#94 WITH [2l:=states_equals_A_states_plus_B_inputs_result#94[2l]]
{-980} states_equals_A_states_plus_B_inputs_result#96 == states_equals_A_states_plus_B_inputs_result#95 WITH [2l:=states_equals_A_states_plus_B_inputs_result#95[2l]]
{-981} k!0@5#17 == 3
{-982} i!0@5#5 == 3
{-983} k!0@5#20 == k!0@5#18
{-984} _controller_states#5 == states_equals_A_states_plus_B_inputs_result#96
{-985} \guard#35 == _controller_states#5[0l] < 1
{-986} tmp_if_expr$1!0@5#2 == _controller_states#5[0l] > -1
{-987} tmp_if_expr$1!0@5#3 == tmp_if_expr$1!0@5#1
{-988} tmp_if_expr$1!0@5#4 == FALSE
{-989} tmp_if_expr$1!0@5#5 == (\guard#35 && tmp_if_expr$1!0@5#2)
{-990} \guard#36 == _controller_states#5[1l] < 1
{-991} tmp_if_expr$2!0@5#2 == _controller_states#5[1l] > -1
{-992} tmp_if_expr$2!0@5#3 == tmp_if_expr$2!0@5#1
{-993} tmp_if_expr$2!0@5#4 == FALSE
{-994} tmp_if_expr$2!0@5#5 == (\guard#36 && tmp_if_expr$2!0@5#2)
{-995} \guard#37 == _controller_states#5[2l] < 1
{-996} tmp_if_expr$3!0@5#2 == _controller_states#5[2l] > -1
{-997} tmp_if_expr$3!0@5#3 == tmp_if_expr$3!0@5#1
{-998} tmp_if_expr$3!0@5#4 == FALSE
{-999} tmp_if_expr$3!0@5#5 == (\guard#37 && tmp_if_expr$3!0@5#2)
|--------------------------
{1} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> tmp_if_expr$3!0@5#5

file discretization_check.c line 308 function main
assertion
{-1} _AminusBK#1 == { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
{-2} __CPROVER_EIGEN_poly#1 == { 0, 0, 0, 0 }
{-3} __CPROVER_dead_object#1 == NULL
{-4} __CPROVER_deallocated#1 == NULL
{-5} __CPROVER_malloc_is_new_array#1 == FALSE
{-6} __CPROVER_malloc_object#1 == NULL
{-7} __CPROVER_malloc_size#1 == 0ul
{-8} __CPROVER_memory_leak#1 == NULL
{-9} __CPROVER_next_thread_id#1 == 0ul
{-10} __CPROVER_pipe_count#1 == 0u
{-11} __CPROVER_rounding_mode!0#1 == 0
{-12} __CPROVER_thread_id!0#1 == 0ul
{-13} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-14} _controller_A#1 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-15} _controller_B#1 == { 16, 0, 0 }
{-16} _controller_inputs#1 == 0
{-17} states_equals_A_states_plus_B_inputs_result#1 == { 0, 0, 0 }
{-18} _AminusBK#2 == { { 0.990478515625, 0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-19} i!0@1#2 == 0
{-20} j!0@1#2 == 0
{-21} _AminusBK#3 == { { 0.990478515625 + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[0l]), 
    0.07568359375, 0.02099609375 }, 
    { 0.125, 0, 0 }, { 0, 0.015625, 0 } }
{-22} j!0@1#3 == 1
{-23} _AminusBK#4 == _AminusBK#3 WITH [0l:=_AminusBK#3[0l] WITH [1l:=_AminusBK#3[0l][1l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[1l])]]
{-24} j!0@1#4 == 2
{-25} _AminusBK#5 == _AminusBK#4 WITH [0l:=_AminusBK#4[0l] WITH [2l:=_AminusBK#4[0l][2l] + -(16 * (__CPROVER_fixedbv[24][12])K_fxp#0[2l])]]
{-26} j!0@1#5 == 3
{-27} i!0@1#3 == 1
{-28} j!0@1#8 == 0
{-29} _AminusBK#6 == _AminusBK#5 WITH [1l:=_AminusBK#5[1l] WITH [0l:=_AminusBK#5[1l][0l]]]
{-30} j!0@1#9 == 1
{-31} _AminusBK#7 == _AminusBK#6 WITH [1l:=_AminusBK#6[1l] WITH [1l:=_AminusBK#6[1l][1l]]]
{-32} j!0@1#10 == 2
{-33} _AminusBK#8 == _AminusBK#7 WITH [1l:=_AminusBK#7[1l] WITH [2l:=_AminusBK#7[1l][2l]]]
{-34} j!0@1#11 == 3
{-35} i!0@1#4 == 2
{-36} j!0@1#14 == 0
{-37} _AminusBK#9 == _AminusBK#8 WITH [2l:=_AminusBK#8[2l] WITH [0l:=_AminusBK#8[2l][0l]]]
{-38} j!0@1#15 == 1
{-39} _AminusBK#10 == _AminusBK#9 WITH [2l:=_AminusBK#9[2l] WITH [1l:=_AminusBK#9[2l][1l]]]
{-40} j!0@1#16 == 2
{-41} _AminusBK#11 == _AminusBK#10 WITH [2l:=_AminusBK#10[2l] WITH [2l:=_AminusBK#10[2l][2l]]]
{-42} j!0@1#17 == 3
{-43} i!0@1#5 == 3
{-44} j!0@1#20 == j!0@1#18
{-45} __CPROVER_EIGEN_poly#2 == { 0, 0, 0, _AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][0l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][1l] + _AminusBK#11[0l][1l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[0l][2l] * _AminusBK#11[1l][1l] * _AminusBK#11[2l][0l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[1l][0l] * _AminusBK#11[2l][1l]) }
{-46} __CPROVER_EIGEN_poly#3 == __CPROVER_EIGEN_poly#2 WITH [2l:=_AminusBK#11[0l][0l] * _AminusBK#11[1l][1l] + _AminusBK#11[0l][0l] * _AminusBK#11[2l][2l] + _AminusBK#11[1l][1l] * _AminusBK#11[2l][2l] + -(_AminusBK#11[0l][1l] * _AminusBK#11[1l][0l]) + -(_AminusBK#11[0l][2l] * _AminusBK#11[2l][0l]) + -(_AminusBK#11[1l][2l] * _AminusBK#11[2l][1l])]
{-47} __CPROVER_EIGEN_poly#4 == __CPROVER_EIGEN_poly#3 WITH [1l:=(__CPROVER_fixedbv[24][12])(-((float)_AminusBK#11[0l][0l]) + -((float)_AminusBK#11[1l][1l]) + -((float)_AminusBK#11[2l][2l]))]
{-48} __CPROVER_EIGEN_poly#5 == __CPROVER_EIGEN_poly#4 WITH [0l:=1]
{-49} lines!0@1#2 == 6
{-50} columns!0@1#2 == 4
{-51} columns$array_size0!0@1#2 == 6l
{-52} i!0@1#2 == 0
{-53} current_stability!0@1#2 == current_stability!0@1#1 WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]
{-54} i!0@1#3 == 1
{-55} current_stability!0@1#3 == current_stability!0@1#2 WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]
{-56} i!0@1#4 == 2
{-57} current_stability!0@1#4 == current_stability!0@1#3 WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]
{-58} i!0@1#5 == 3
{-59} current_stability!0@1#5 == current_stability!0@1#4 WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]
{-60} i!0@1#6 == 4
{-61} sum!0@1#2 == 0
{-62} i!0@1#7 == 0
{-63} sum!0@1#3 == __CPROVER_EIGEN_poly#5[0l]
{-64} i!0@1#8 == 1
{-65} sum!0@1#4 == __CPROVER_EIGEN_poly#5[1l] + sum!0@1#3
{-66} i!0@1#9 == 2
{-67} sum!0@1#5 == __CPROVER_EIGEN_poly#5[2l] + sum!0@1#4
{-68} i!0@1#10 == 3
{-69} sum!0@1#6 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#5
{-70} i!0@1#11 == 4
{-71} \guard#1 == (float)sum!0@1#6 <= 0f
{-72} check_stability#return_value!0#1 == 0
{-73} columns$array_size0!0@1#4 == 6l
{-74} sum!0@1#8 == sum!0@1#6
{-75} current_stability!0@1#7 == current_stability!0@1#5
{-76} j!0@1#3 == j!0@1#1
{-77} m!0@1#3 == m!0@1#1
{-78} check_stability#return_value!0#2 == check_stability#return_value!0#0
{-79} lines!0@1#4 == 6
{-80} columns!0@1#4 == 4
{-81} i!0@1#13 == 4
{-82} sum!0@1#9 == 0
{-83} i!0@1#14 == 0
{-84} a!0@1#1 == -1
{-85} b!0@1#1 == 3u
{-86} acc!0@1#2 == 1
{-87} i!0@1#2 == 0
{-88} acc!0@1#3 == -1
{-89} i!0@1#3 == 1
{-90} acc!0@1#4 == 1
{-91} i!0@1#4 == 2
{-92} acc!0@1#5 == -1
{-93} i!0@1#5 == 3
{-94} internal_pow#return_value!0#1 == -1
{-95} return_value_internal_pow$1!0@1#2 == -1
{-96} sum!0@1#10 == -1 * __CPROVER_EIGEN_poly#5[0l]
{-97} i!0@1#15 == 1
{-98} a!0@2#1 == -1
{-99} b!0@2#1 == 2u
{-100} acc!0@2#2 == 1
{-101} i!0@2#2 == 0
{-102} acc!0@2#3 == -1
{-103} i!0@2#3 == 1
{-104} acc!0@2#4 == 1
{-105} i!0@2#4 == 2
{-106} internal_pow#return_value!0#3 == 1
{-107} return_value_internal_pow$1!0@1#5 == 1
{-108} sum!0@1#11 == -1 * __CPROVER_EIGEN_poly#5[0l] + __CPROVER_EIGEN_poly#5[1l]
{-109} i!0@1#16 == 2
{-110} a!0@3#1 == -1
{-111} b!0@3#1 == 1u
{-112} acc!0@3#2 == 1
{-113} i!0@3#2 == 0
{-114} acc!0@3#3 == -1
{-115} i!0@3#3 == 1
{-116} internal_pow#return_value!0#5 == -1
{-117} return_value_internal_pow$1!0@1#8 == -1
{-118} sum!0@1#12 == -1 * __CPROVER_EIGEN_poly#5[2l] + sum!0@1#11
{-119} i!0@1#17 == 3
{-120} a!0@4#1 == -1
{-121} b!0@4#1 == 0u
{-122} acc!0@4#2 == 1
{-123} i!0@4#2 == 0
{-124} internal_pow#return_value!0#7 == 1
{-125} return_value_internal_pow$1!0@1#11 == 1
{-126} sum!0@1#13 == __CPROVER_EIGEN_poly#5[3l] + sum!0@1#12
{-127} i!0@1#18 == 4
{-128} return_value_internal_pow$1!0@1#14 == return_value_internal_pow$1!0@1#12
{-129} internal_pow#return_value!0#10 == internal_pow#return_value!0#8
{-130} a!0@5#1 == -1
{-131} b!0@5#1 == 3u
{-132} acc!0@5#2 == 1
{-133} i!0@5#2 == 0
{-134} acc!0@5#3 == -1
{-135} i!0@5#3 == 1
{-136} acc!0@5#4 == 1
{-137} i!0@5#4 == 2
{-138} acc!0@5#5 == -1
{-139} i!0@5#5 == 3
{-140} internal_pow#return_value!0#11 == -1
{-141} return_value_internal_pow$2!0@1#2 == -1
{-142} sum!0@1#14 == -1 * sum!0@1#13
{-143} \guard#2 == (float)(-1 * sum!0@1#13) <= 0f
{-144} check_stability#return_value!0#3 == 0
{-145} return_value_internal_pow$2!0@1#4 == -1
{-146} columns$array_size0!0@1#6 == 6l
{-147} sum!0@1#16 == -1 * sum!0@1#13
{-148} current_stability!0@1#9 == current_stability!0@1#7
{-149} j!0@1#5 == j!0@1#3
{-150} m!0@1#5 == m!0@1#3
{-151} i!0@1#20 == 4
{-152} check_stability#return_value!0#4 == check_stability#return_value!0#2
{-153} lines!0@1#6 == 6
{-154} columns!0@1#6 == 4
{-155} \guard#3 == (float)__CPROVER_EIGEN_poly#5[3l] < 0f
{-156} tmp_if_expr$3!0@1#2 == -((float)__CPROVER_EIGEN_poly#5[3l])
{-157} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-158} tmp_if_expr$3!0@1#4 == (float)__CPROVER_EIGEN_poly#5[3l]
{-159} tmp_if_expr$3!0@1#5 == (\guard#3 ? tmp_if_expr$3!0@1#2 : tmp_if_expr$3!0@1#4)
{-160} \guard#4 == !((float)__CPROVER_EIGEN_poly#5[0l] >= tmp_if_expr$3!0@1#5)
{-161} check_stability#return_value!0#5 == 0
{-162} return_value_internal_pow$2!0@1#6 == -1
{-163} columns$array_size0!0@1#8 == 6l
{-164} sum!0@1#18 == -1 * sum!0@1#13
{-165} current_stability!0@1#11 == current_stability!0@1#9
{-166} j!0@1#7 == j!0@1#5
{-167} m!0@1#7 == m!0@1#5
{-168} i!0@1#22 == 4
{-169} check_stability#return_value!0#6 == check_stability#return_value!0#4
{-170} lines!0@1#8 == 6
{-171} columns!0@1#8 == 4
{-172} i!0@1#23 == 0
{-173} j!0@1#8 == 0
{-174} m!0@1#8 == m!0@1#7 WITH [0l:=m!0@1#7[0l] WITH [0l:=0]]
{-175} j!0@1#9 == 1
{-176} m!0@1#9 == m!0@1#8 WITH [0l:=m!0@1#8[0l] WITH [1l:=0]]
{-177} j!0@1#10 == 2
{-178} m!0@1#10 == m!0@1#9 WITH [0l:=m!0@1#9[0l] WITH [2l:=0]]
{-179} j!0@1#11 == 3
{-180} m!0@1#11 == m!0@1#10 WITH [0l:=m!0@1#10[0l] WITH [3l:=0]]
{-181} j!0@1#12 == 4
{-182} i!0@1#24 == 1
{-183} j!0@1#13 == 0
{-184} m!0@1#12 == m!0@1#11 WITH [1l:=m!0@1#11[1l] WITH [0l:=0]]
{-185} j!0@1#14 == 1
{-186} m!0@1#13 == m!0@1#12 WITH [1l:=m!0@1#12[1l] WITH [1l:=0]]
{-187} j!0@1#15 == 2
{-188} m!0@1#14 == m!0@1#13 WITH [1l:=m!0@1#13[1l] WITH [2l:=0]]
{-189} j!0@1#16 == 3
{-190} m!0@1#15 == m!0@1#14 WITH [1l:=m!0@1#14[1l] WITH [3l:=0]]
{-191} j!0@1#17 == 4
{-192} i!0@1#25 == 2
{-193} j!0@1#18 == 0
{-194} m!0@1#16 == m!0@1#15 WITH [2l:=m!0@1#15[2l] WITH [0l:=0]]
{-195} j!0@1#19 == 1
{-196} m!0@1#17 == m!0@1#16 WITH [2l:=m!0@1#16[2l] WITH [1l:=0]]
{-197} j!0@1#20 == 2
{-198} m!0@1#18 == m!0@1#17 WITH [2l:=m!0@1#17[2l] WITH [2l:=0]]
{-199} j!0@1#21 == 3
{-200} m!0@1#19 == m!0@1#18 WITH [2l:=m!0@1#18[2l] WITH [3l:=0]]
{-201} j!0@1#22 == 4
{-202} i!0@1#26 == 3
{-203} j!0@1#23 == 0
{-204} m!0@1#20 == m!0@1#19 WITH [3l:=m!0@1#19[3l] WITH [0l:=0]]
{-205} j!0@1#24 == 1
{-206} m!0@1#21 == m!0@1#20 WITH [3l:=m!0@1#20[3l] WITH [1l:=0]]
{-207} j!0@1#25 == 2
{-208} m!0@1#22 == m!0@1#21 WITH [3l:=m!0@1#21[3l] WITH [2l:=0]]
{-209} j!0@1#26 == 3
{-210} m!0@1#23 == m!0@1#22 WITH [3l:=m!0@1#22[3l] WITH [3l:=0]]
{-211} j!0@1#27 == 4
{-212} i!0@1#27 == 4
{-213} j!0@1#28 == 0
{-214} m!0@1#24 == m!0@1#23 WITH [4l:=m!0@1#23[4l] WITH [0l:=0]]
{-215} j!0@1#29 == 1
{-216} m!0@1#25 == m!0@1#24 WITH [4l:=m!0@1#24[4l] WITH [1l:=0]]
{-217} j!0@1#30 == 2
{-218} m!0@1#26 == m!0@1#25 WITH [4l:=m!0@1#25[4l] WITH [2l:=0]]
{-219} j!0@1#31 == 3
{-220} m!0@1#27 == m!0@1#26 WITH [4l:=m!0@1#26[4l] WITH [3l:=0]]
{-221} j!0@1#32 == 4
{-222} i!0@1#28 == 5
{-223} j!0@1#33 == 0
{-224} m!0@1#28 == m!0@1#27 WITH [5l:=m!0@1#27[5l] WITH [0l:=0]]
{-225} j!0@1#34 == 1
{-226} m!0@1#29 == m!0@1#28 WITH [5l:=m!0@1#28[5l] WITH [1l:=0]]
{-227} j!0@1#35 == 2
{-228} m!0@1#30 == m!0@1#29 WITH [5l:=m!0@1#29[5l] WITH [2l:=0]]
{-229} j!0@1#36 == 3
{-230} m!0@1#31 == m!0@1#30 WITH [5l:=m!0@1#30[5l] WITH [3l:=0]]
{-231} j!0@1#37 == 4
{-232} i!0@1#29 == 6
{-233} i!0@1#30 == 0
{-234} j!0@1#38 == 0
{-235} m!0@1#32 == m!0@1#31 WITH [0l:=m!0@1#31[0l] WITH [0l:=__CPROVER_EIGEN_poly#5[0l]]]
{-236} j!0@1#39 == 1
{-237} m!0@1#33 == m!0@1#32 WITH [0l:=m!0@1#32[0l] WITH [1l:=__CPROVER_EIGEN_poly#5[1l]]]
{-238} j!0@1#40 == 2
{-239} m!0@1#34 == m!0@1#33 WITH [0l:=m!0@1#33[0l] WITH [2l:=__CPROVER_EIGEN_poly#5[2l]]]
{-240} j!0@1#41 == 3
{-241} m!0@1#35 == m!0@1#34 WITH [0l:=m!0@1#34[0l] WITH [3l:=__CPROVER_EIGEN_poly#5[3l]]]
{-242} j!0@1#42 == 4
{-243} i!0@1#31 == 1
{-244} j!0@1#43 == 0
{-245} x!0@1#2 == 0
{-246} m!0@1#36 == m!0@1#35 WITH [1l:=m!0@1#35[1l] WITH [0l:=m!0@1#35[0l][3l]]]
{-247} x!0@1#3 == 1
{-248} m!0@1#37 == m!0@1#36 WITH [1l:=m!0@1#36[1l] WITH [1l:=m!0@1#36[0l][2l]]]
{-249} x!0@1#4 == 2
{-250} m!0@1#38 == m!0@1#37 WITH [1l:=m!0@1#37[1l] WITH [2l:=m!0@1#37[0l][1l]]]
{-251} x!0@1#5 == 3
{-252} m!0@1#39 == m!0@1#38 WITH [1l:=m!0@1#38[1l] WITH [3l:=m!0@1#38[0l][0l]]]
{-253} x!0@1#6 == 4
{-254} columns!0@1#9 == 3
{-255} j!0@1#44 == 3
{-256} j!0@1#45 == 4
{-257} x!0@1#9 == x!0@1#7
{-258} i!0@1#32 == 2
{-259} j!0@1#46 == 0
{-260} x!0@1#11 == x!0@1#9
{-261} m!0@1#40 == m!0@1#39 WITH [2l:=m!0@1#39[2l] WITH [0l:=m!0@1#39[0l][0l] + -((m!0@1#39[0l][3l] / m!0@1#39[0l][0l]) * m!0@1#39[1l][0l])]]
{-262} j!0@1#47 == 1
{-263} x!0@1#13 == x!0@1#11
{-264} m!0@1#41 == m!0@1#40 WITH [2l:=m!0@1#40[2l] WITH [1l:=m!0@1#40[0l][1l] + -((m!0@1#40[0l][3l] / m!0@1#40[0l][0l]) * m!0@1#40[1l][1l])]]
{-265} j!0@1#48 == 2
{-266} x!0@1#15 == x!0@1#13
{-267} m!0@1#42 == m!0@1#41 WITH [2l:=m!0@1#41[2l] WITH [2l:=m!0@1#41[0l][2l] + -((m!0@1#41[0l][3l] / m!0@1#41[0l][0l]) * m!0@1#41[1l][2l])]]
{-268} j!0@1#49 == 3
{-269} x!0@1#17 == x!0@1#15
{-270} i!0@1#33 == 3
{-271} j!0@1#50 == 0
{-272} x!0@1#19 == 0
{-273} m!0@1#43 == m!0@1#42 WITH [3l:=m!0@1#42[3l] WITH [0l:=m!0@1#42[2l][2l]]]
{-274} x!0@1#20 == 1
{-275} m!0@1#44 == m!0@1#43 WITH [3l:=m!0@1#43[3l] WITH [1l:=m!0@1#43[2l][1l]]]
{-276} x!0@1#21 == 2
{-277} m!0@1#45 == m!0@1#44 WITH [3l:=m!0@1#44[3l] WITH [2l:=m!0@1#44[2l][0l]]]
{-278} x!0@1#22 == 3
{-279} columns!0@1#10 == 2
{-280} j!0@1#51 == 2
{-281} j!0@1#52 == 3
{-282} x!0@1#25 == x!0@1#23
{-283} i!0@1#34 == 4
{-284} j!0@1#53 == 0
{-285} x!0@1#27 == x!0@1#25
{-286} m!0@1#46 == m!0@1#45 WITH [4l:=m!0@1#45[4l] WITH [0l:=m!0@1#45[2l][0l] + -((m!0@1#45[2l][2l] / m!0@1#45[2l][0l]) * m!0@1#45[3l][0l])]]
{-287} j!0@1#54 == 1
{-288} x!0@1#29 == x!0@1#27
{-289} m!0@1#47 == m!0@1#46 WITH [4l:=m!0@1#46[4l] WITH [1l:=m!0@1#46[2l][1l] + -((m!0@1#46[2l][2l] / m!0@1#46[2l][0l]) * m!0@1#46[3l][1l])]]
{-290} j!0@1#55 == 2
{-291} x!0@1#31 == x!0@1#29
{-292} i!0@1#35 == 5
{-293} j!0@1#56 == 0
{-294} x!0@1#33 == 0
{-295} m!0@1#48 == m!0@1#47 WITH [5l:=m!0@1#47[5l] WITH [0l:=m!0@1#47[4l][1l]]]
{-296} x!0@1#34 == 1
{-297} m!0@1#49 == m!0@1#48 WITH [5l:=m!0@1#48[5l] WITH [1l:=m!0@1#48[4l][0l]]]
{-298} x!0@1#35 == 2
{-299} columns!0@1#11 == 1
{-300} j!0@1#57 == 1
{-301} j!0@1#58 == 2
{-302} x!0@1#38 == x!0@1#36
{-303} i!0@1#36 == 6
{-304} x!0@1#40 == x!0@1#38
{-305} first_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-306} i!0@1#37 == 0
{-307} line_is_positive!0@1#2 == ((float)m!0@1#49[0l][0l] >= 0f ? 1 : 0)
{-308} \guard#5 == !(first_is_positive!0@1#2 == line_is_positive!0@1#2)
{-309} check_stability#return_value!0#7 == 0
{-310} tmp_if_expr$3!0@1#7 == tmp_if_expr$3!0@1#5
{-311} return_value_internal_pow$2!0@1#8 == -1
{-312} columns$array_size0!0@1#10 == 6l
{-313} sum!0@1#20 == -1 * sum!0@1#13
{-314} current_stability!0@1#13 == current_stability!0@1#11
{-315} j!0@1#60 == 2
{-316} m!0@1#51 == m!0@1#49
{-317} i!0@1#39 == 0
{-318} check_stability#return_value!0#8 == check_stability#return_value!0#6
{-319} lines!0@1#10 == 6
{-320} line_is_positive!0@1#4 == line_is_positive!0@1#2
{-321} first_is_positive!0@1#4 == first_is_positive!0@1#2
{-322} columns!0@1#13 == 1
{-323} i!0@1#40 == 1
{-324} tmp_if_expr$3!0@1#9 == tmp_if_expr$3!0@1#7
{-325} return_value_internal_pow$2!0@1#10 == -1
{-326} columns$array_size0!0@1#12 == 6l
{-327} sum!0@1#22 == -1 * sum!0@1#13
{-328} current_stability!0@1#15 == current_stability!0@1#13
{-329} j!0@1#62 == 2
{-330} m!0@1#53 == m!0@1#51
{-331} i!0@1#42 == 1
{-332} lines!0@1#12 == 6
{-333} line_is_positive!0@1#8 == line_is_positive!0@1#5
{-334} first_is_positive!0@1#6 == first_is_positive!0@1#4
{-335} columns!0@1#15 == 1
{-336} i!0@1#43 == 2
{-337} line_is_positive!0@1#10 == ((float)m!0@1#53[2l][0l] >= 0f ? 1 : 0)
{-338} \guard#6 == !(first_is_positive!0@1#6 == line_is_positive!0@1#10)
{-339} check_stability#return_value!0#9 == 0
{-340} tmp_if_expr$3!0@1#11 == tmp_if_expr$3!0@1#9
{-341} return_value_internal_pow$2!0@1#12 == -1
{-342} columns$array_size0!0@1#14 == 6l
{-343} sum!0@1#24 == -1 * sum!0@1#13
{-344} current_stability!0@1#17 == current_stability!0@1#15
{-345} j!0@1#64 == 2
{-346} m!0@1#55 == m!0@1#53
{-347} i!0@1#45 == 2
{-348} check_stability#return_value!0#10 == check_stability#return_value!0#8
{-349} lines!0@1#14 == 6
{-350} line_is_positive!0@1#12 == line_is_positive!0@1#10
{-351} first_is_positive!0@1#8 == first_is_positive!0@1#6
{-352} columns!0@1#17 == 1
{-353} i!0@1#46 == 3
{-354} tmp_if_expr$3!0@1#13 == tmp_if_expr$3!0@1#11
{-355} return_value_internal_pow$2!0@1#14 == -1
{-356} columns$array_size0!0@1#16 == 6l
{-357} sum!0@1#26 == -1 * sum!0@1#13
{-358} current_stability!0@1#19 == current_stability!0@1#17
{-359} j!0@1#66 == 2
{-360} m!0@1#57 == m!0@1#55
{-361} i!0@1#48 == 3
{-362} lines!0@1#16 == 6
{-363} line_is_positive!0@1#16 == line_is_positive!0@1#13
{-364} first_is_positive!0@1#10 == first_is_positive!0@1#8
{-365} columns!0@1#19 == 1
{-366} i!0@1#49 == 4
{-367} line_is_positive!0@1#18 == ((float)m!0@1#57[4l][0l] >= 0f ? 1 : 0)
{-368} \guard#7 == !(first_is_positive!0@1#10 == line_is_positive!0@1#18)
{-369} check_stability#return_value!0#11 == 0
{-370} tmp_if_expr$3!0@1#15 == tmp_if_expr$3!0@1#13
{-371} return_value_internal_pow$2!0@1#16 == -1
{-372} columns$array_size0!0@1#18 == 6l
{-373} sum!0@1#28 == -1 * sum!0@1#13
{-374} current_stability!0@1#21 == current_stability!0@1#19
{-375} j!0@1#68 == 2
{-376} m!0@1#59 == m!0@1#57
{-377} i!0@1#51 == 4
{-378} check_stability#return_value!0#12 == check_stability#return_value!0#10
{-379} lines!0@1#18 == 6
{-380} line_is_positive!0@1#20 == line_is_positive!0@1#18
{-381} first_is_positive!0@1#12 == first_is_positive!0@1#10
{-382} columns!0@1#21 == 1
{-383} i!0@1#52 == 5
{-384} tmp_if_expr$3!0@1#17 == tmp_if_expr$3!0@1#15
{-385} return_value_internal_pow$2!0@1#18 == -1
{-386} columns$array_size0!0@1#20 == 6l
{-387} sum!0@1#30 == -1 * sum!0@1#13
{-388} current_stability!0@1#23 == current_stability!0@1#21
{-389} j!0@1#70 == 2
{-390} m!0@1#61 == m!0@1#59
{-391} i!0@1#54 == 5
{-392} lines!0@1#20 == 6
{-393} line_is_positive!0@1#24 == line_is_positive!0@1#21
{-394} first_is_positive!0@1#14 == first_is_positive!0@1#12
{-395} columns!0@1#23 == 1
{-396} i!0@1#55 == 6
{-397} tmp_if_expr$3!0@1#19 == tmp_if_expr$3!0@1#17
{-398} return_value_internal_pow$2!0@1#20 == -1
{-399} columns$array_size0!0@1#22 == 6l
{-400} sum!0@1#32 == -1 * sum!0@1#13
{-401} current_stability!0@1#25 == current_stability!0@1#23
{-402} j!0@1#72 == 2
{-403} m!0@1#63 == m!0@1#61
{-404} i!0@1#57 == 6
{-405} lines!0@1#22 == 6
{-406} line_is_positive!0@1#27 == line_is_positive!0@1#24
{-407} first_is_positive!0@1#16 == first_is_positive!0@1#14
{-408} columns!0@1#25 == 1
{-409} check_stability#return_value!0#13 == 1
{-410} tmp_if_expr$3!0@1#21 == (\guard#7 ? tmp_if_expr$3!0@1#14 : tmp_if_expr$3!0@1#20)
{-411} return_value_internal_pow$2!0@1#22 == (\guard#7 ? return_value_internal_pow$2!0@1#15 : return_value_internal_pow$2!0@1#21)
{-412} columns$array_size0!0@1#24 == (\guard#7 ? columns$array_size0!0@1#17 : columns$array_size0!0@1#23)
{-413} sum!0@1#34 == (\guard#7 ? sum!0@1#27 : sum!0@1#33)
{-414} current_stability!0@1#27 == (\guard#7 ? current_stability!0@1#20 : current_stability!0@1#26)
{-415} j!0@1#74 == (\guard#7 ? j!0@1#67 : j!0@1#73)
{-416} m!0@1#65 == (\guard#7 ? m!0@1#58 : m!0@1#64)
{-417} i!0@1#59 == (\guard#7 ? i!0@1#50 : i!0@1#58)
{-418} check_stability#return_value!0#14 == (\guard#7 ? 0 : 1)
{-419} lines!0@1#24 == (\guard#7 ? lines!0@1#17 : lines!0@1#23)
{-420} line_is_positive!0@1#28 == (\guard#7 ? line_is_positive!0@1#19 : line_is_positive!0@1#27)
{-421} first_is_positive!0@1#18 == (\guard#7 ? first_is_positive!0@1#11 : first_is_positive!0@1#17)
{-422} columns!0@1#27 == (\guard#7 ? columns!0@1#20 : columns!0@1#26)
{-423} tmp_if_expr$3!0@1#22 == (\guard#6 ? tmp_if_expr$3!0@1#10 : tmp_if_expr$3!0@1#21)
{-424} return_value_internal_pow$2!0@1#23 == (\guard#6 ? return_value_internal_pow$2!0@1#11 : return_value_internal_pow$2!0@1#22)
{-425} columns$array_size0!0@1#25 == (\guard#6 ? columns$array_size0!0@1#13 : columns$array_size0!0@1#24)
{-426} sum!0@1#35 == (\guard#6 ? sum!0@1#23 : sum!0@1#34)
{-427} current_stability!0@1#28 == (\guard#6 ? current_stability!0@1#16 : current_stability!0@1#27)
{-428} j!0@1#75 == (\guard#6 ? j!0@1#63 : j!0@1#74)
{-429} m!0@1#66 == (\guard#6 ? m!0@1#54 : m!0@1#65)
{-430} i!0@1#60 == (\guard#6 ? i!0@1#44 : i!0@1#59)
{-431} check_stability#return_value!0#15 == (\guard#6 ? 0 : check_stability#return_value!0#14)
{-432} lines!0@1#25 == (\guard#6 ? lines!0@1#13 : lines!0@1#24)
{-433} line_is_positive!0@1#29 == (\guard#6 ? line_is_positive!0@1#11 : line_is_positive!0@1#28)
{-434} first_is_positive!0@1#19 == (\guard#6 ? first_is_positive!0@1#7 : first_is_positive!0@1#18)
{-435} columns!0@1#28 == (\guard#6 ? columns!0@1#16 : columns!0@1#27)
{-436} tmp_if_expr$3!0@1#23 == (\guard#5 ? tmp_if_expr$3!0@1#6 : tmp_if_expr$3!0@1#22)
{-437} return_value_internal_pow$2!0@1#24 == (\guard#5 ? return_value_internal_pow$2!0@1#7 : return_value_internal_pow$2!0@1#23)
{-438} columns$array_size0!0@1#26 == (\guard#5 ? columns$array_size0!0@1#9 : columns$array_size0!0@1#25)
{-439} sum!0@1#36 == (\guard#5 ? sum!0@1#19 : sum!0@1#35)
{-440} current_stability!0@1#29 == (\guard#5 ? current_stability!0@1#12 : current_stability!0@1#28)
{-441} j!0@1#76 == (\guard#5 ? j!0@1#59 : j!0@1#75)
{-442} m!0@1#67 == (\guard#5 ? m!0@1#50 : m!0@1#66)
{-443} i!0@1#61 == (\guard#5 ? i!0@1#38 : i!0@1#60)
{-444} check_stability#return_value!0#16 == (\guard#5 ? 0 : check_stability#return_value!0#15)
{-445} lines!0@1#26 == (\guard#5 ? lines!0@1#9 : lines!0@1#25)
{-446} line_is_positive!0@1#30 == (\guard#5 ? line_is_positive!0@1#3 : line_is_positive!0@1#29)
{-447} first_is_positive!0@1#20 == (\guard#5 ? first_is_positive!0@1#3 : first_is_positive!0@1#19)
{-448} columns!0@1#29 == (\guard#5 ? columns!0@1#12 : columns!0@1#28)
{-449} x!0@1#41 == (\guard#4 ? x!0@1#0 : x!0@1#40)
{-450} tmp_if_expr$3!0@1#24 == (\guard#4 ? tmp_if_expr$3!0@1#5 : tmp_if_expr$3!0@1#23)
{-451} return_value_internal_pow$2!0@1#25 == (\guard#4 ? return_value_internal_pow$2!0@1#5 : return_value_internal_pow$2!0@1#24)
{-452} columns$array_size0!0@1#27 == (\guard#4 ? columns$array_size0!0@1#7 : columns$array_size0!0@1#26)
{-453} sum!0@1#37 == (\guard#4 ? sum!0@1#17 : sum!0@1#36)
{-454} current_stability!0@1#30 == (\guard#4 ? current_stability!0@1#10 : current_stability!0@1#29)
{-455} j!0@1#77 == (\guard#4 ? j!0@1#6 : j!0@1#76)
{-456} m!0@1#68 == (\guard#4 ? m!0@1#6 : m!0@1#67)
{-457} i!0@1#62 == (\guard#4 ? i!0@1#21 : i!0@1#61)
{-458} check_stability#return_value!0#17 == (\guard#4 ? 0 : check_stability#return_value!0#16)
{-459} lines!0@1#27 == (\guard#4 ? lines!0@1#7 : lines!0@1#26)
{-460} line_is_positive!0@1#31 == (\guard#4 ? line_is_positive!0@1#0 : line_is_positive!0@1#30)
{-461} first_is_positive!0@1#21 == (\guard#4 ? first_is_positive!0@1#0 : first_is_positive!0@1#20)
{-462} columns!0@1#30 == (\guard#4 ? columns!0@1#7 : columns!0@1#29)
{-463} tmp_if_expr$3!0@1#25 == (\guard#2 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#24)
{-464} x!0@1#42 == (\guard#2 ? x!0@1#0 : x!0@1#41)
{-465} return_value_internal_pow$2!0@1#26 == (\guard#2 ? return_value_internal_pow$2!0@1#3 : return_value_internal_pow$2!0@1#25)
{-466} columns$array_size0!0@1#28 == (\guard#2 ? columns$array_size0!0@1#5 : columns$array_size0!0@1#27)
{-467} sum!0@1#38 == (\guard#2 ? sum!0@1#15 : sum!0@1#37)
{-468} current_stability!0@1#31 == (\guard#2 ? current_stability!0@1#8 : current_stability!0@1#30)
{-469} j!0@1#78 == (\guard#2 ? j!0@1#4 : j!0@1#77)
{-470} m!0@1#69 == (\guard#2 ? m!0@1#4 : m!0@1#68)
{-471} i!0@1#63 == (\guard#2 ? i!0@1#19 : i!0@1#62)
{-472} check_stability#return_value!0#18 == (\guard#2 ? 0 : check_stability#return_value!0#17)
{-473} lines!0@1#28 == (\guard#2 ? lines!0@1#5 : lines!0@1#27)
{-474} line_is_positive!0@1#32 == (\guard#2 ? line_is_positive!0@1#0 : line_is_positive!0@1#31)
{-475} first_is_positive!0@1#22 == (\guard#2 ? first_is_positive!0@1#0 : first_is_positive!0@1#21)
{-476} columns!0@1#31 == (\guard#2 ? columns!0@1#5 : columns!0@1#30)
{-477} tmp_if_expr$3!0@1#26 == (\guard#1 ? tmp_if_expr$3!0@1#0 : tmp_if_expr$3!0@1#25)
{-478} return_value_internal_pow$2!0@1#27 == (\guard#1 ? return_value_internal_pow$2!0@1#0 : return_value_internal_pow$2!0@1#26)
{-479} x!0@1#43 == (\guard#1 ? x!0@1#0 : x!0@1#42)
{-480} columns$array_size0!0@1#29 == (\guard#1 ? columns$array_size0!0@1#3 : columns$array_size0!0@1#28)
{-481} sum!0@1#39 == (\guard#1 ? sum!0@1#7 : sum!0@1#38)
{-482} current_stability!0@1#32 == (\guard#1 ? current_stability!0@1#6 : current_stability!0@1#31)
{-483} j!0@1#79 == (\guard#1 ? j!0@1#2 : j!0@1#78)
{-484} m!0@1#70 == (\guard#1 ? m!0@1#2 : m!0@1#69)
{-485} i!0@1#64 == (\guard#1 ? i!0@1#12 : i!0@1#63)
{-486} check_stability#return_value!0#19 == (\guard#1 ? 0 : check_stability#return_value!0#18)
{-487} lines!0@1#29 == (\guard#1 ? lines!0@1#3 : lines!0@1#28)
{-488} return_value_internal_pow$1!0@1#15 == (\guard#1 ? return_value_internal_pow$1!0@1#0 : return_value_internal_pow$1!0@1#14)
{-489} line_is_positive!0@1#33 == (\guard#1 ? line_is_positive!0@1#0 : line_is_positive!0@1#32)
{-490} first_is_positive!0@1#23 == (\guard#1 ? first_is_positive!0@1#0 : first_is_positive!0@1#22)
{-491} internal_pow#return_value!0#13 == (\guard#1 ? internal_pow#return_value!0#0 : internal_pow#return_value!0#12)
{-492} columns!0@1#32 == (\guard#1 ? columns!0@1#3 : columns!0@1#31)
{-493} return_value_check_stability$1!0@1#2 == check_stability#return_value!0#19
{-494} j!0@1#2 == 0
{-495} __state0!0@1#2 == _controller_states#0[0l]
{-496} __state1!0@1#2 == _controller_states#0[1l]
{-497} __state2!0@1#2 == _controller_states#0[2l]
{-498} \guard#8 == _controller_states#0[0l] < 0.5
{-499} tmp_if_expr$1!0@1#2 == _controller_states#0[0l] > -0.5
{-500} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-501} tmp_if_expr$1!0@1#4 == FALSE
{-502} tmp_if_expr$1!0@1#5 == (\guard#8 && tmp_if_expr$1!0@1#2)
{-503} tmp_if_expr$1!0@1#5
{-504} j!0@1#3 == 1
{-505} __state0!0@1#5 == _controller_states#0[0l]
{-506} __state1!0@1#5 == _controller_states#0[1l]
{-507} __state2!0@1#5 == _controller_states#0[2l]
{-508} \guard#9 == _controller_states#0[1l] < 0.5
{-509} tmp_if_expr$1!0@1#8 == _controller_states#0[1l] > -0.5
{-510} tmp_if_expr$1!0@1#9 == tmp_if_expr$1!0@1#7
{-511} tmp_if_expr$1!0@1#10 == FALSE
{-512} tmp_if_expr$1!0@1#11 == (\guard#9 && tmp_if_expr$1!0@1#8)
{-513} tmp_if_expr$1!0@1#11
{-514} j!0@1#4 == 2
{-515} __state0!0@1#8 == _controller_states#0[0l]
{-516} __state1!0@1#8 == _controller_states#0[1l]
{-517} __state2!0@1#8 == _controller_states#0[2l]
{-518} \guard#10 == _controller_states#0[2l] < 0.5
{-519} tmp_if_expr$1!0@1#14 == _controller_states#0[2l] > -0.5
{-520} tmp_if_expr$1!0@1#15 == tmp_if_expr$1!0@1#13
{-521} tmp_if_expr$1!0@1#16 == FALSE
{-522} tmp_if_expr$1!0@1#17 == (\guard#10 && tmp_if_expr$1!0@1#14)
{-523} tmp_if_expr$1!0@1#17
{-524} j!0@1#5 == 3
{-525} tmp_if_expr$1!0@1#20 == tmp_if_expr$1!0@1#18
{-526} __state2!0@1#11 == __state2!0@1#9
{-527} __state1!0@1#11 == __state1!0@1#9
{-528} __state0!0@1#11 == __state0!0@1#9
{-529} k!0@1#2 == 0
{-530} result_fxp!0@1#2 == 0
{-531} k!0@1#2 == 0
{-532} result_fxp!0@1#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]
{-533} _controller_inputs#2 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l]))
{-534} (float)_controller_inputs#2 < 1f && (float)_controller_inputs#2 > -1f
{-535} k!0@1#3 == 1
{-536} result_fxp!0@1#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]
{-537} _controller_inputs#3 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l]))
{-538} (float)_controller_inputs#3 < 1f && (float)_controller_inputs#3 > -1f
{-539} k!0@1#4 == 2
{-540} result_fxp!0@1#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]
{-541} _controller_inputs#4 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#0[2l]))
{-542} (float)_controller_inputs#4 < 1f && (float)_controller_inputs#4 > -1f
{-543} k!0@1#5 == 3
{-544} states_equals_A_states_plus_B_inputs_result#2 == ARRAY_OF(0)
{-545} i!0@1#2 == 0
{-546} k!0@1#2 == 0
{-547} states_equals_A_states_plus_B_inputs_result#3 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#0[0l]]
{-548} states_equals_A_states_plus_B_inputs_result#4 == states_equals_A_states_plus_B_inputs_result#3 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#3[0l]]
{-549} k!0@1#3 == 1
{-550} states_equals_A_states_plus_B_inputs_result#5 == states_equals_A_states_plus_B_inputs_result#4 WITH [0l:=0.07568359375 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#4[0l]]
{-551} states_equals_A_states_plus_B_inputs_result#6 == states_equals_A_states_plus_B_inputs_result#5 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#5[0l]]
{-552} k!0@1#4 == 2
{-553} states_equals_A_states_plus_B_inputs_result#7 == states_equals_A_states_plus_B_inputs_result#6 WITH [0l:=0.02099609375 * _controller_states#0[2l] + states_equals_A_states_plus_B_inputs_result#6[0l]]
{-554} states_equals_A_states_plus_B_inputs_result#8 == states_equals_A_states_plus_B_inputs_result#7 WITH [0l:=16 * _controller_inputs#4 + states_equals_A_states_plus_B_inputs_result#7[0l]]
{-555} k!0@1#5 == 3
{-556} i!0@1#3 == 1
{-557} k!0@1#8 == 0
{-558} states_equals_A_states_plus_B_inputs_result#9 == states_equals_A_states_plus_B_inputs_result#8 WITH [1l:=0.125 * _controller_states#0[0l] + states_equals_A_states_plus_B_inputs_result#8[1l]]
{-559} states_equals_A_states_plus_B_inputs_result#10 == states_equals_A_states_plus_B_inputs_result#9 WITH [1l:=states_equals_A_states_plus_B_inputs_result#9[1l]]
{-560} k!0@1#9 == 1
{-561} states_equals_A_states_plus_B_inputs_result#11 == states_equals_A_states_plus_B_inputs_result#10 WITH [1l:=states_equals_A_states_plus_B_inputs_result#10[1l]]
{-562} states_equals_A_states_plus_B_inputs_result#12 == states_equals_A_states_plus_B_inputs_result#11 WITH [1l:=states_equals_A_states_plus_B_inputs_result#11[1l]]
{-563} k!0@1#10 == 2
{-564} states_equals_A_states_plus_B_inputs_result#13 == states_equals_A_states_plus_B_inputs_result#12 WITH [1l:=states_equals_A_states_plus_B_inputs_result#12[1l]]
{-565} states_equals_A_states_plus_B_inputs_result#14 == states_equals_A_states_plus_B_inputs_result#13 WITH [1l:=states_equals_A_states_plus_B_inputs_result#13[1l]]
{-566} k!0@1#11 == 3
{-567} i!0@1#4 == 2
{-568} k!0@1#14 == 0
{-569} states_equals_A_states_plus_B_inputs_result#15 == states_equals_A_states_plus_B_inputs_result#14 WITH [2l:=states_equals_A_states_plus_B_inputs_result#14[2l]]
{-570} states_equals_A_states_plus_B_inputs_result#16 == states_equals_A_states_plus_B_inputs_result#15 WITH [2l:=states_equals_A_states_plus_B_inputs_result#15[2l]]
{-571} k!0@1#15 == 1
{-572} states_equals_A_states_plus_B_inputs_result#17 == states_equals_A_states_plus_B_inputs_result#16 WITH [2l:=0.015625 * _controller_states#0[1l] + states_equals_A_states_plus_B_inputs_result#16[2l]]
{-573} states_equals_A_states_plus_B_inputs_result#18 == states_equals_A_states_plus_B_inputs_result#17 WITH [2l:=states_equals_A_states_plus_B_inputs_result#17[2l]]
{-574} k!0@1#16 == 2
{-575} states_equals_A_states_plus_B_inputs_result#19 == states_equals_A_states_plus_B_inputs_result#18 WITH [2l:=states_equals_A_states_plus_B_inputs_result#18[2l]]
{-576} states_equals_A_states_plus_B_inputs_result#20 == states_equals_A_states_plus_B_inputs_result#19 WITH [2l:=states_equals_A_states_plus_B_inputs_result#19[2l]]
{-577} k!0@1#17 == 3
{-578} i!0@1#5 == 3
{-579} k!0@1#20 == k!0@1#18
{-580} _controller_states#1 == states_equals_A_states_plus_B_inputs_result#20
{-581} \guard#11 == _controller_states#1[0l] < 1
{-582} tmp_if_expr$1!0@1#2 == _controller_states#1[0l] > -1
{-583} tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
{-584} tmp_if_expr$1!0@1#4 == FALSE
{-585} tmp_if_expr$1!0@1#5 == (\guard#11 && tmp_if_expr$1!0@1#2)
{-586} \guard#12 == _controller_states#1[1l] < 1
{-587} tmp_if_expr$2!0@1#2 == _controller_states#1[1l] > -1
{-588} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-589} tmp_if_expr$2!0@1#4 == FALSE
{-590} tmp_if_expr$2!0@1#5 == (\guard#12 && tmp_if_expr$2!0@1#2)
{-591} \guard#13 == _controller_states#1[2l] < 1
{-592} tmp_if_expr$3!0@1#2 == _controller_states#1[2l] > -1
{-593} tmp_if_expr$3!0@1#3 == tmp_if_expr$3!0@1#1
{-594} tmp_if_expr$3!0@1#4 == FALSE
{-595} tmp_if_expr$3!0@1#5 == (\guard#13 && tmp_if_expr$3!0@1#2)
{-596} i!0@1#2 == 0
{-597} \guard#14 == _controller_states#1[0l] > 1
{-598} tmp_if_expr$2!0@1#2 == TRUE
{-599} tmp_if_expr$2!0@1#3 == tmp_if_expr$2!0@1#1
{-600} tmp_if_expr$2!0@1#4 == _controller_states#1[0l] < -1
{-601} tmp_if_expr$2!0@1#5 == (\guard#14 || tmp_if_expr$2!0@1#4)
{-602} check_safety#return_value!0#1 == 0
{-603} check_safety#return_value!0#2 == check_safety#return_value!0#0
{-604} i!0@1#4 == 0
{-605} k!0@1#4 == 0
{-606} i!0@1#5 == 1
{-607} \guard#15 == _controller_states#1[1l] > 1
{-608} tmp_if_expr$2!0@1#8 == TRUE
{-609} tmp_if_expr$2!0@1#9 == tmp_if_expr$2!0@1#7
{-610} tmp_if_expr$2!0@1#10 == _controller_states#1[1l] < -1
{-611} tmp_if_expr$2!0@1#11 == (\guard#15 || tmp_if_expr$2!0@1#10)
{-612} check_safety#return_value!0#3 == 0
{-613} check_safety#return_value!0#4 == check_safety#return_value!0#2
{-614} i!0@1#7 == 1
{-615} k!0@1#6 == 0
{-616} i!0@1#8 == 2
{-617} \guard#16 == _controller_states#1[2l] > 1
{-618} tmp_if_expr$2!0@1#14 == TRUE
{-619} tmp_if_expr$2!0@1#15 == tmp_if_expr$2!0@1#13
{-620} tmp_if_expr$2!0@1#16 == _controller_states#1[2l] < -1
{-621} tmp_if_expr$2!0@1#17 == (\guard#16 || tmp_if_expr$2!0@1#16)
{-622} check_safety#return_value!0#5 == 0
{-623} check_safety#return_value!0#6 == check_safety#return_value!0#4
{-624} i!0@1#10 == 2
{-625} k!0@1#8 == 0
{-626} i!0@1#11 == 3
{-627} i!0@1#13 == 3
{-628} k!0@1#10 == 0
{-629} tmp_if_expr$2!0@1#20 == tmp_if_expr$2!0@1#18
{-630} k!0@1#11 == 1
{-631} result_fxp!0@2#2 == 0
{-632} k!0@2#2 == 0
{-633} result_fxp!0@2#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]
{-634} _controller_inputs#5 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l]))
{-635} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#5 < 1f && (float)_controller_inputs#5 > -1f
{-636} k!0@2#3 == 1
{-637} result_fxp!0@2#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]
{-638} _controller_inputs#6 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l]))
{-639} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#6 < 1f && (float)_controller_inputs#6 > -1f
{-640} k!0@2#4 == 2
{-641} result_fxp!0@2#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]
{-642} _controller_inputs#7 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#1[2l]))
{-643} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#17 ==> (float)_controller_inputs#7 < 1f && (float)_controller_inputs#7 > -1f
{-644} k!0@2#5 == 3
{-645} states_equals_A_states_plus_B_inputs_result#21 == ARRAY_OF(0)
{-646} i!0@2#2 == 0
{-647} k!0@2#2 == 0
{-648} states_equals_A_states_plus_B_inputs_result#22 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#1[0l]]
{-649} states_equals_A_states_plus_B_inputs_result#23 == states_equals_A_states_plus_B_inputs_result#22 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#22[0l]]
{-650} k!0@2#3 == 1
{-651} states_equals_A_states_plus_B_inputs_result#24 == states_equals_A_states_plus_B_inputs_result#23 WITH [0l:=0.07568359375 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#23[0l]]
{-652} states_equals_A_states_plus_B_inputs_result#25 == states_equals_A_states_plus_B_inputs_result#24 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#24[0l]]
{-653} k!0@2#4 == 2
{-654} states_equals_A_states_plus_B_inputs_result#26 == states_equals_A_states_plus_B_inputs_result#25 WITH [0l:=0.02099609375 * _controller_states#1[2l] + states_equals_A_states_plus_B_inputs_result#25[0l]]
{-655} states_equals_A_states_plus_B_inputs_result#27 == states_equals_A_states_plus_B_inputs_result#26 WITH [0l:=16 * _controller_inputs#7 + states_equals_A_states_plus_B_inputs_result#26[0l]]
{-656} k!0@2#5 == 3
{-657} i!0@2#3 == 1
{-658} k!0@2#8 == 0
{-659} states_equals_A_states_plus_B_inputs_result#28 == states_equals_A_states_plus_B_inputs_result#27 WITH [1l:=0.125 * _controller_states#1[0l] + states_equals_A_states_plus_B_inputs_result#27[1l]]
{-660} states_equals_A_states_plus_B_inputs_result#29 == states_equals_A_states_plus_B_inputs_result#28 WITH [1l:=states_equals_A_states_plus_B_inputs_result#28[1l]]
{-661} k!0@2#9 == 1
{-662} states_equals_A_states_plus_B_inputs_result#30 == states_equals_A_states_plus_B_inputs_result#29 WITH [1l:=states_equals_A_states_plus_B_inputs_result#29[1l]]
{-663} states_equals_A_states_plus_B_inputs_result#31 == states_equals_A_states_plus_B_inputs_result#30 WITH [1l:=states_equals_A_states_plus_B_inputs_result#30[1l]]
{-664} k!0@2#10 == 2
{-665} states_equals_A_states_plus_B_inputs_result#32 == states_equals_A_states_plus_B_inputs_result#31 WITH [1l:=states_equals_A_states_plus_B_inputs_result#31[1l]]
{-666} states_equals_A_states_plus_B_inputs_result#33 == states_equals_A_states_plus_B_inputs_result#32 WITH [1l:=states_equals_A_states_plus_B_inputs_result#32[1l]]
{-667} k!0@2#11 == 3
{-668} i!0@2#4 == 2
{-669} k!0@2#14 == 0
{-670} states_equals_A_states_plus_B_inputs_result#34 == states_equals_A_states_plus_B_inputs_result#33 WITH [2l:=states_equals_A_states_plus_B_inputs_result#33[2l]]
{-671} states_equals_A_states_plus_B_inputs_result#35 == states_equals_A_states_plus_B_inputs_result#34 WITH [2l:=states_equals_A_states_plus_B_inputs_result#34[2l]]
{-672} k!0@2#15 == 1
{-673} states_equals_A_states_plus_B_inputs_result#36 == states_equals_A_states_plus_B_inputs_result#35 WITH [2l:=0.015625 * _controller_states#1[1l] + states_equals_A_states_plus_B_inputs_result#35[2l]]
{-674} states_equals_A_states_plus_B_inputs_result#37 == states_equals_A_states_plus_B_inputs_result#36 WITH [2l:=states_equals_A_states_plus_B_inputs_result#36[2l]]
{-675} k!0@2#16 == 2
{-676} states_equals_A_states_plus_B_inputs_result#38 == states_equals_A_states_plus_B_inputs_result#37 WITH [2l:=states_equals_A_states_plus_B_inputs_result#37[2l]]
{-677} states_equals_A_states_plus_B_inputs_result#39 == states_equals_A_states_plus_B_inputs_result#38 WITH [2l:=states_equals_A_states_plus_B_inputs_result#38[2l]]
{-678} k!0@2#17 == 3
{-679} i!0@2#5 == 3
{-680} k!0@2#20 == k!0@2#18
{-681} _controller_states#2 == states_equals_A_states_plus_B_inputs_result#39
{-682} \guard#17 == _controller_states#2[0l] < 1
{-683} tmp_if_expr$1!0@2#2 == _controller_states#2[0l] > -1
{-684} tmp_if_expr$1!0@2#3 == tmp_if_expr$1!0@2#1
{-685} tmp_if_expr$1!0@2#4 == FALSE
{-686} tmp_if_expr$1!0@2#5 == (\guard#17 && tmp_if_expr$1!0@2#2)
{-687} \guard#18 == _controller_states#2[1l] < 1
{-688} tmp_if_expr$2!0@2#2 == _controller_states#2[1l] > -1
{-689} tmp_if_expr$2!0@2#3 == tmp_if_expr$2!0@2#1
{-690} tmp_if_expr$2!0@2#4 == FALSE
{-691} tmp_if_expr$2!0@2#5 == (\guard#18 && tmp_if_expr$2!0@2#2)
{-692} \guard#19 == _controller_states#2[2l] < 1
{-693} tmp_if_expr$3!0@2#2 == _controller_states#2[2l] > -1
{-694} tmp_if_expr$3!0@2#3 == tmp_if_expr$3!0@2#1
{-695} tmp_if_expr$3!0@2#4 == FALSE
{-696} tmp_if_expr$3!0@2#5 == (\guard#19 && tmp_if_expr$3!0@2#2)
{-697} i!0@1#16 == 0
{-698} \guard#20 == _controller_states#2[0l] > 1
{-699} tmp_if_expr$2!0@1#22 == TRUE
{-700} tmp_if_expr$2!0@1#23 == tmp_if_expr$2!0@1#21
{-701} tmp_if_expr$2!0@1#24 == _controller_states#2[0l] < -1
{-702} tmp_if_expr$2!0@1#25 == (\guard#20 || tmp_if_expr$2!0@1#24)
{-703} check_safety#return_value!0#7 == 0
{-704} check_safety#return_value!0#8 == check_safety#return_value!0#6
{-705} i!0@1#18 == 0
{-706} k!0@1#13 == 1
{-707} i!0@1#19 == 1
{-708} \guard#21 == _controller_states#2[1l] > 1
{-709} tmp_if_expr$2!0@1#28 == TRUE
{-710} tmp_if_expr$2!0@1#29 == tmp_if_expr$2!0@1#27
{-711} tmp_if_expr$2!0@1#30 == _controller_states#2[1l] < -1
{-712} tmp_if_expr$2!0@1#31 == (\guard#21 || tmp_if_expr$2!0@1#30)
{-713} check_safety#return_value!0#9 == 0
{-714} check_safety#return_value!0#10 == check_safety#return_value!0#8
{-715} i!0@1#21 == 1
{-716} k!0@1#15 == 1
{-717} i!0@1#22 == 2
{-718} \guard#22 == _controller_states#2[2l] > 1
{-719} tmp_if_expr$2!0@1#34 == TRUE
{-720} tmp_if_expr$2!0@1#35 == tmp_if_expr$2!0@1#33
{-721} tmp_if_expr$2!0@1#36 == _controller_states#2[2l] < -1
{-722} tmp_if_expr$2!0@1#37 == (\guard#22 || tmp_if_expr$2!0@1#36)
{-723} check_safety#return_value!0#11 == 0
{-724} check_safety#return_value!0#12 == check_safety#return_value!0#10
{-725} i!0@1#24 == 2
{-726} k!0@1#17 == 1
{-727} i!0@1#25 == 3
{-728} i!0@1#27 == 3
{-729} k!0@1#19 == 1
{-730} tmp_if_expr$2!0@1#40 == tmp_if_expr$2!0@1#38
{-731} k!0@1#20 == 2
{-732} result_fxp!0@3#2 == 0
{-733} k!0@3#2 == 0
{-734} result_fxp!0@3#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]
{-735} _controller_inputs#8 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l]))
{-736} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#8 < 1f && (float)_controller_inputs#8 > -1f
{-737} k!0@3#3 == 1
{-738} result_fxp!0@3#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]
{-739} _controller_inputs#9 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l]))
{-740} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#9 < 1f && (float)_controller_inputs#9 > -1f
{-741} k!0@3#4 == 2
{-742} result_fxp!0@3#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]
{-743} _controller_inputs#10 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#2[2l]))
{-744} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#37 ==> (float)_controller_inputs#10 < 1f && (float)_controller_inputs#10 > -1f
{-745} k!0@3#5 == 3
{-746} states_equals_A_states_plus_B_inputs_result#40 == ARRAY_OF(0)
{-747} i!0@3#2 == 0
{-748} k!0@3#2 == 0
{-749} states_equals_A_states_plus_B_inputs_result#41 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#2[0l]]
{-750} states_equals_A_states_plus_B_inputs_result#42 == states_equals_A_states_plus_B_inputs_result#41 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#41[0l]]
{-751} k!0@3#3 == 1
{-752} states_equals_A_states_plus_B_inputs_result#43 == states_equals_A_states_plus_B_inputs_result#42 WITH [0l:=0.07568359375 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#42[0l]]
{-753} states_equals_A_states_plus_B_inputs_result#44 == states_equals_A_states_plus_B_inputs_result#43 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#43[0l]]
{-754} k!0@3#4 == 2
{-755} states_equals_A_states_plus_B_inputs_result#45 == states_equals_A_states_plus_B_inputs_result#44 WITH [0l:=0.02099609375 * _controller_states#2[2l] + states_equals_A_states_plus_B_inputs_result#44[0l]]
{-756} states_equals_A_states_plus_B_inputs_result#46 == states_equals_A_states_plus_B_inputs_result#45 WITH [0l:=16 * _controller_inputs#10 + states_equals_A_states_plus_B_inputs_result#45[0l]]
{-757} k!0@3#5 == 3
{-758} i!0@3#3 == 1
{-759} k!0@3#8 == 0
{-760} states_equals_A_states_plus_B_inputs_result#47 == states_equals_A_states_plus_B_inputs_result#46 WITH [1l:=0.125 * _controller_states#2[0l] + states_equals_A_states_plus_B_inputs_result#46[1l]]
{-761} states_equals_A_states_plus_B_inputs_result#48 == states_equals_A_states_plus_B_inputs_result#47 WITH [1l:=states_equals_A_states_plus_B_inputs_result#47[1l]]
{-762} k!0@3#9 == 1
{-763} states_equals_A_states_plus_B_inputs_result#49 == states_equals_A_states_plus_B_inputs_result#48 WITH [1l:=states_equals_A_states_plus_B_inputs_result#48[1l]]
{-764} states_equals_A_states_plus_B_inputs_result#50 == states_equals_A_states_plus_B_inputs_result#49 WITH [1l:=states_equals_A_states_plus_B_inputs_result#49[1l]]
{-765} k!0@3#10 == 2
{-766} states_equals_A_states_plus_B_inputs_result#51 == states_equals_A_states_plus_B_inputs_result#50 WITH [1l:=states_equals_A_states_plus_B_inputs_result#50[1l]]
{-767} states_equals_A_states_plus_B_inputs_result#52 == states_equals_A_states_plus_B_inputs_result#51 WITH [1l:=states_equals_A_states_plus_B_inputs_result#51[1l]]
{-768} k!0@3#11 == 3
{-769} i!0@3#4 == 2
{-770} k!0@3#14 == 0
{-771} states_equals_A_states_plus_B_inputs_result#53 == states_equals_A_states_plus_B_inputs_result#52 WITH [2l:=states_equals_A_states_plus_B_inputs_result#52[2l]]
{-772} states_equals_A_states_plus_B_inputs_result#54 == states_equals_A_states_plus_B_inputs_result#53 WITH [2l:=states_equals_A_states_plus_B_inputs_result#53[2l]]
{-773} k!0@3#15 == 1
{-774} states_equals_A_states_plus_B_inputs_result#55 == states_equals_A_states_plus_B_inputs_result#54 WITH [2l:=0.015625 * _controller_states#2[1l] + states_equals_A_states_plus_B_inputs_result#54[2l]]
{-775} states_equals_A_states_plus_B_inputs_result#56 == states_equals_A_states_plus_B_inputs_result#55 WITH [2l:=states_equals_A_states_plus_B_inputs_result#55[2l]]
{-776} k!0@3#16 == 2
{-777} states_equals_A_states_plus_B_inputs_result#57 == states_equals_A_states_plus_B_inputs_result#56 WITH [2l:=states_equals_A_states_plus_B_inputs_result#56[2l]]
{-778} states_equals_A_states_plus_B_inputs_result#58 == states_equals_A_states_plus_B_inputs_result#57 WITH [2l:=states_equals_A_states_plus_B_inputs_result#57[2l]]
{-779} k!0@3#17 == 3
{-780} i!0@3#5 == 3
{-781} k!0@3#20 == k!0@3#18
{-782} _controller_states#3 == states_equals_A_states_plus_B_inputs_result#58
{-783} \guard#23 == _controller_states#3[0l] < 1
{-784} tmp_if_expr$1!0@3#2 == _controller_states#3[0l] > -1
{-785} tmp_if_expr$1!0@3#3 == tmp_if_expr$1!0@3#1
{-786} tmp_if_expr$1!0@3#4 == FALSE
{-787} tmp_if_expr$1!0@3#5 == (\guard#23 && tmp_if_expr$1!0@3#2)
{-788} \guard#24 == _controller_states#3[1l] < 1
{-789} tmp_if_expr$2!0@3#2 == _controller_states#3[1l] > -1
{-790} tmp_if_expr$2!0@3#3 == tmp_if_expr$2!0@3#1
{-791} tmp_if_expr$2!0@3#4 == FALSE
{-792} tmp_if_expr$2!0@3#5 == (\guard#24 && tmp_if_expr$2!0@3#2)
{-793} \guard#25 == _controller_states#3[2l] < 1
{-794} tmp_if_expr$3!0@3#2 == _controller_states#3[2l] > -1
{-795} tmp_if_expr$3!0@3#3 == tmp_if_expr$3!0@3#1
{-796} tmp_if_expr$3!0@3#4 == FALSE
{-797} tmp_if_expr$3!0@3#5 == (\guard#25 && tmp_if_expr$3!0@3#2)
{-798} i!0@1#30 == 0
{-799} \guard#26 == _controller_states#3[0l] > 1
{-800} tmp_if_expr$2!0@1#42 == TRUE
{-801} tmp_if_expr$2!0@1#43 == tmp_if_expr$2!0@1#41
{-802} tmp_if_expr$2!0@1#44 == _controller_states#3[0l] < -1
{-803} tmp_if_expr$2!0@1#45 == (\guard#26 || tmp_if_expr$2!0@1#44)
{-804} check_safety#return_value!0#13 == 0
{-805} check_safety#return_value!0#14 == check_safety#return_value!0#12
{-806} i!0@1#32 == 0
{-807} k!0@1#22 == 2
{-808} i!0@1#33 == 1
{-809} \guard#27 == _controller_states#3[1l] > 1
{-810} tmp_if_expr$2!0@1#48 == TRUE
{-811} tmp_if_expr$2!0@1#49 == tmp_if_expr$2!0@1#47
{-812} tmp_if_expr$2!0@1#50 == _controller_states#3[1l] < -1
{-813} tmp_if_expr$2!0@1#51 == (\guard#27 || tmp_if_expr$2!0@1#50)
{-814} check_safety#return_value!0#15 == 0
{-815} check_safety#return_value!0#16 == check_safety#return_value!0#14
{-816} i!0@1#35 == 1
{-817} k!0@1#24 == 2
{-818} i!0@1#36 == 2
{-819} \guard#28 == _controller_states#3[2l] > 1
{-820} tmp_if_expr$2!0@1#54 == TRUE
{-821} tmp_if_expr$2!0@1#55 == tmp_if_expr$2!0@1#53
{-822} tmp_if_expr$2!0@1#56 == _controller_states#3[2l] < -1
{-823} tmp_if_expr$2!0@1#57 == (\guard#28 || tmp_if_expr$2!0@1#56)
{-824} check_safety#return_value!0#17 == 0
{-825} check_safety#return_value!0#18 == check_safety#return_value!0#16
{-826} i!0@1#38 == 2
{-827} k!0@1#26 == 2
{-828} i!0@1#39 == 3
{-829} i!0@1#41 == 3
{-830} k!0@1#28 == 2
{-831} tmp_if_expr$2!0@1#60 == tmp_if_expr$2!0@1#58
{-832} k!0@1#29 == 3
{-833} result_fxp!0@4#2 == 0
{-834} k!0@4#2 == 0
{-835} result_fxp!0@4#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]
{-836} _controller_inputs#11 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l]))
{-837} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#11 < 1f && (float)_controller_inputs#11 > -1f
{-838} k!0@4#3 == 1
{-839} result_fxp!0@4#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]
{-840} _controller_inputs#12 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l]))
{-841} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#12 < 1f && (float)_controller_inputs#12 > -1f
{-842} k!0@4#4 == 2
{-843} result_fxp!0@4#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]
{-844} _controller_inputs#13 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#3[2l]))
{-845} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 ==> (float)_controller_inputs#13 < 1f && (float)_controller_inputs#13 > -1f
{-846} k!0@4#5 == 3
{-847} states_equals_A_states_plus_B_inputs_result#59 == ARRAY_OF(0)
{-848} i!0@4#2 == 0
{-849} k!0@4#2 == 0
{-850} states_equals_A_states_plus_B_inputs_result#60 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#3[0l]]
{-851} states_equals_A_states_plus_B_inputs_result#61 == states_equals_A_states_plus_B_inputs_result#60 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#60[0l]]
{-852} k!0@4#3 == 1
{-853} states_equals_A_states_plus_B_inputs_result#62 == states_equals_A_states_plus_B_inputs_result#61 WITH [0l:=0.07568359375 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#61[0l]]
{-854} states_equals_A_states_plus_B_inputs_result#63 == states_equals_A_states_plus_B_inputs_result#62 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#62[0l]]
{-855} k!0@4#4 == 2
{-856} states_equals_A_states_plus_B_inputs_result#64 == states_equals_A_states_plus_B_inputs_result#63 WITH [0l:=0.02099609375 * _controller_states#3[2l] + states_equals_A_states_plus_B_inputs_result#63[0l]]
{-857} states_equals_A_states_plus_B_inputs_result#65 == states_equals_A_states_plus_B_inputs_result#64 WITH [0l:=16 * _controller_inputs#13 + states_equals_A_states_plus_B_inputs_result#64[0l]]
{-858} k!0@4#5 == 3
{-859} i!0@4#3 == 1
{-860} k!0@4#8 == 0
{-861} states_equals_A_states_plus_B_inputs_result#66 == states_equals_A_states_plus_B_inputs_result#65 WITH [1l:=0.125 * _controller_states#3[0l] + states_equals_A_states_plus_B_inputs_result#65[1l]]
{-862} states_equals_A_states_plus_B_inputs_result#67 == states_equals_A_states_plus_B_inputs_result#66 WITH [1l:=states_equals_A_states_plus_B_inputs_result#66[1l]]
{-863} k!0@4#9 == 1
{-864} states_equals_A_states_plus_B_inputs_result#68 == states_equals_A_states_plus_B_inputs_result#67 WITH [1l:=states_equals_A_states_plus_B_inputs_result#67[1l]]
{-865} states_equals_A_states_plus_B_inputs_result#69 == states_equals_A_states_plus_B_inputs_result#68 WITH [1l:=states_equals_A_states_plus_B_inputs_result#68[1l]]
{-866} k!0@4#10 == 2
{-867} states_equals_A_states_plus_B_inputs_result#70 == states_equals_A_states_plus_B_inputs_result#69 WITH [1l:=states_equals_A_states_plus_B_inputs_result#69[1l]]
{-868} states_equals_A_states_plus_B_inputs_result#71 == states_equals_A_states_plus_B_inputs_result#70 WITH [1l:=states_equals_A_states_plus_B_inputs_result#70[1l]]
{-869} k!0@4#11 == 3
{-870} i!0@4#4 == 2
{-871} k!0@4#14 == 0
{-872} states_equals_A_states_plus_B_inputs_result#72 == states_equals_A_states_plus_B_inputs_result#71 WITH [2l:=states_equals_A_states_plus_B_inputs_result#71[2l]]
{-873} states_equals_A_states_plus_B_inputs_result#73 == states_equals_A_states_plus_B_inputs_result#72 WITH [2l:=states_equals_A_states_plus_B_inputs_result#72[2l]]
{-874} k!0@4#15 == 1
{-875} states_equals_A_states_plus_B_inputs_result#74 == states_equals_A_states_plus_B_inputs_result#73 WITH [2l:=0.015625 * _controller_states#3[1l] + states_equals_A_states_plus_B_inputs_result#73[2l]]
{-876} states_equals_A_states_plus_B_inputs_result#75 == states_equals_A_states_plus_B_inputs_result#74 WITH [2l:=states_equals_A_states_plus_B_inputs_result#74[2l]]
{-877} k!0@4#16 == 2
{-878} states_equals_A_states_plus_B_inputs_result#76 == states_equals_A_states_plus_B_inputs_result#75 WITH [2l:=states_equals_A_states_plus_B_inputs_result#75[2l]]
{-879} states_equals_A_states_plus_B_inputs_result#77 == states_equals_A_states_plus_B_inputs_result#76 WITH [2l:=states_equals_A_states_plus_B_inputs_result#76[2l]]
{-880} k!0@4#17 == 3
{-881} i!0@4#5 == 3
{-882} k!0@4#20 == k!0@4#18
{-883} _controller_states#4 == states_equals_A_states_plus_B_inputs_result#77
{-884} \guard#29 == _controller_states#4[0l] < 1
{-885} tmp_if_expr$1!0@4#2 == _controller_states#4[0l] > -1
{-886} tmp_if_expr$1!0@4#3 == tmp_if_expr$1!0@4#1
{-887} tmp_if_expr$1!0@4#4 == FALSE
{-888} tmp_if_expr$1!0@4#5 == (\guard#29 && tmp_if_expr$1!0@4#2)
{-889} \guard#30 == _controller_states#4[1l] < 1
{-890} tmp_if_expr$2!0@4#2 == _controller_states#4[1l] > -1
{-891} tmp_if_expr$2!0@4#3 == tmp_if_expr$2!0@4#1
{-892} tmp_if_expr$2!0@4#4 == FALSE
{-893} tmp_if_expr$2!0@4#5 == (\guard#30 && tmp_if_expr$2!0@4#2)
{-894} \guard#31 == _controller_states#4[2l] < 1
{-895} tmp_if_expr$3!0@4#2 == _controller_states#4[2l] > -1
{-896} tmp_if_expr$3!0@4#3 == tmp_if_expr$3!0@4#1
{-897} tmp_if_expr$3!0@4#4 == FALSE
{-898} tmp_if_expr$3!0@4#5 == (\guard#31 && tmp_if_expr$3!0@4#2)
{-899} i!0@1#44 == 0
{-900} \guard#32 == _controller_states#4[0l] > 1
{-901} tmp_if_expr$2!0@1#62 == TRUE
{-902} tmp_if_expr$2!0@1#63 == tmp_if_expr$2!0@1#61
{-903} tmp_if_expr$2!0@1#64 == _controller_states#4[0l] < -1
{-904} tmp_if_expr$2!0@1#65 == (\guard#32 || tmp_if_expr$2!0@1#64)
{-905} check_safety#return_value!0#19 == 0
{-906} check_safety#return_value!0#20 == check_safety#return_value!0#18
{-907} i!0@1#46 == 0
{-908} k!0@1#31 == 3
{-909} i!0@1#47 == 1
{-910} \guard#33 == _controller_states#4[1l] > 1
{-911} tmp_if_expr$2!0@1#68 == TRUE
{-912} tmp_if_expr$2!0@1#69 == tmp_if_expr$2!0@1#67
{-913} tmp_if_expr$2!0@1#70 == _controller_states#4[1l] < -1
{-914} tmp_if_expr$2!0@1#71 == (\guard#33 || tmp_if_expr$2!0@1#70)
{-915} check_safety#return_value!0#21 == 0
{-916} check_safety#return_value!0#22 == check_safety#return_value!0#20
{-917} i!0@1#49 == 1
{-918} k!0@1#33 == 3
{-919} i!0@1#50 == 2
{-920} \guard#34 == _controller_states#4[2l] > 1
{-921} tmp_if_expr$2!0@1#74 == TRUE
{-922} tmp_if_expr$2!0@1#75 == tmp_if_expr$2!0@1#73
{-923} tmp_if_expr$2!0@1#76 == _controller_states#4[2l] < -1
{-924} tmp_if_expr$2!0@1#77 == (\guard#34 || tmp_if_expr$2!0@1#76)
{-925} check_safety#return_value!0#23 == 0
{-926} check_safety#return_value!0#24 == check_safety#return_value!0#22
{-927} i!0@1#52 == 2
{-928} k!0@1#35 == 3
{-929} i!0@1#53 == 3
{-930} i!0@1#55 == 3
{-931} k!0@1#37 == 3
{-932} tmp_if_expr$2!0@1#80 == tmp_if_expr$2!0@1#78
{-933} k!0@1#38 == 4
{-934} result_fxp!0@5#2 == 0
{-935} k!0@5#2 == 0
{-936} result_fxp!0@5#3 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l]
{-937} _controller_inputs#14 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l]))
{-938} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#14 < 1f && (float)_controller_inputs#14 > -1f
{-939} k!0@5#3 == 1
{-940} result_fxp!0@5#4 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l]
{-941} _controller_inputs#15 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l]))
{-942} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#15 < 1f && (float)_controller_inputs#15 > -1f
{-943} k!0@5#4 == 2
{-944} result_fxp!0@5#5 == K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[2l]
{-945} _controller_inputs#16 == (__CPROVER_fixedbv[24][12])-((float)(__CPROVER_fixedbv[24][12])(K_fxp#0[0l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[0l] + K_fxp#0[1l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[1l] + K_fxp#0[2l] * (const __CPROVER_fixedbv[16][3])_controller_states#4[2l]))
{-946} !tmp_if_expr$2!0@1#11 && !tmp_if_expr$2!0@1#17 && !tmp_if_expr$2!0@1#25 && !tmp_if_expr$2!0@1#31 && !tmp_if_expr$2!0@1#37 && !tmp_if_expr$2!0@1#45 && !tmp_if_expr$2!0@1#5 && !tmp_if_expr$2!0@1#51 && !tmp_if_expr$2!0@1#57 && !tmp_if_expr$2!0@1#65 && !tmp_if_expr$2!0@1#71 && !tmp_if_expr$2!0@1#77 ==> (float)_controller_inputs#16 < 1f && (float)_controller_inputs#16 > -1f
{-947} k!0@5#5 == 3
{-948} states_equals_A_states_plus_B_inputs_result#78 == ARRAY_OF(0)
{-949} i!0@5#2 == 0
{-950} k!0@5#2 == 0
{-951} states_equals_A_states_plus_B_inputs_result#79 == ARRAY_OF(0) WITH [0l:=0.990478515625 * _controller_states#4[0l]]
{-952} states_equals_A_states_plus_B_inputs_result#80 == states_equals_A_states_plus_B_inputs_result#79 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#79[0l]]
{-953} k!0@5#3 == 1
{-954} states_equals_A_states_plus_B_inputs_result#81 == states_equals_A_states_plus_B_inputs_result#80 WITH [0l:=0.07568359375 * _controller_states#4[1l] + states_equals_A_states_plus_B_inputs_result#80[0l]]
{-955} states_equals_A_states_plus_B_inputs_result#82 == states_equals_A_states_plus_B_inputs_result#81 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#81[0l]]
{-956} k!0@5#4 == 2
{-957} states_equals_A_states_plus_B_inputs_result#83 == states_equals_A_states_plus_B_inputs_result#82 WITH [0l:=0.02099609375 * _controller_states#4[2l] + states_equals_A_states_plus_B_inputs_result#82[0l]]
{-958} states_equals_A_states_plus_B_inputs_result#84 == states_equals_A_states_plus_B_inputs_result#83 WITH [0l:=16 * _controller_inputs#16 + states_equals_A_states_plus_B_inputs_result#83[0l]]
{-959} k!0@5#5 == 3
{-960} i!0@5#3 == 1
{-961} k!0@5#8 == 0
{-962} states_equals_A_states_plus_B_inputs_result#85 == states_equals_A_states_plus_B_inputs_result#84 WITH [1l:=0.125 * _controller_states#4[0l] + states_equals_A_states_plus_B_inputs_result#84[1l]]
{-963} states_equals_A_states_plus_B_inputs_result#86 == states_equals_A_states_plus_B_inputs_result#85 WITH [1l:=states_equals_A_states_plus_B_inputs_result#85[1l]]
{-964} k!0@5#9 == 1
{-965} states_equals_A_states_plus_B_inputs_result#87 == states_equals_A_states_plus_B_inputs_result#86 WITH [1l:=states_equals_A_states_plus_B_inputs_result#86[1l]]
{-966} states_equals_A_states_plus_B_inputs_result#88 == states_equals_A_states_plus_B_inputs_result#87 WITH [1l:=states_equals_A_states_plus_B_inputs_result#87[1l]]
{-967} k!0@5#10 == 2
{-968} states_equals_A_states_plus_B_inputs_result#89 == states_equals_A_states_plus_B_inputs_result#88 WITH [1l:=states_equals_A_states_plus_B_inputs_result#88[1l]]
{-969} states_equals_A_states_plus_B_inputs_result#90 == states_equals_A_states_plus_B_inputs_result#89 WITH [1l:=states_equals_A_states_plus_B_inputs_result#89[1l]]
{-970} k!0@5#11 == 3
{-971} i!0@5#4 == 2
{-972} k!0@5#14 == 0
{-973} states_equals_A_states_plus_B_inputs_result#91 == states_equals_A_states_plus_B_inputs_result#90 WITH [2l:=states_equals_A_states_plus_B_inputs_result#90[2l]]
{-974} states_equals_A_states_plus_B_inputs_result#92 == states_equals_A_states_plus_B_inputs_result#91 WITH [2l:=states_equals_A_states_plus_B_inputs_result#91[2l]]
{-975} k!0@5#15 == 1
{-976} states_equals_A_states_plus_B_inputs_result#93 == states_equals_A_states_plus_B_inputs_result#92 WITH [2l:=0.015625 * _controller_states#4[1l] + states_equals_A_states_plus_B_inputs_result#92[2l]]
{-977} states_equals_A_states_plus_B_inputs_result#94 == states_equals_A_states_plus_B_inputs_result#93 WITH [2l:=states_equals_A_states_plus_B_inputs_result#93[2l]]
{-978} k!0@5#16 == 2
{-979} states_equals_A_states_plus_B_inputs_result#95 == states_equals_A_states_plus_B_inputs_result#94 WITH [2l:=states_equals_A_states_plus_B_inputs_result#94[2l]]
{-980} states_equals_A_states_plus_B_inputs_result#96 == states_equals_A_states_plus_B_inputs_result#95 WITH [2l:=states_equals_A_states_plus_B_inputs_result#95[2l]]
{-981} k!0@5#17 == 3
{-982} i!0@5#5 == 3
{-983} k!0@5#20 == k!0@5#18
{-984} _controller_states#5 == states_equals_A_states_plus_B_inputs_result#96
{-985} \guard#35 == _controller_states#5[0l] < 1
{-986} tmp_if_expr$1!0@5#2 == _controller_states#5[0l] > -1
{-987} tmp_if_expr$1!0@5#3 == tmp_if_expr$1!0@5#1
{-988} tmp_if_expr$1!0@5#4 == FALSE
{-989} tmp_if_expr$1!0@5#5 == (\guard#35 && tmp_if_expr$1!0@5#2)
{-990} \guard#36 == _controller_states#5[1l] < 1
{-991} tmp_if_expr$2!0@5#2 == _controller_states#5[1l] > -1
{-992} tmp_if_expr$2!0@5#3 == tmp_if_expr$2!0@5#1
{-993} tmp_if_expr$2!0@5#4 == FALSE
{-994} tmp_if_expr$2!0@5#5 == (\guard#36 && tmp_if_expr$2!0@5#2)
{-995} \guard#37 == _controller_states#5[2l] < 1
{-996} tmp_if_expr$3!0@5#2 == _controller_states#5[2l] > -1
{-997} tmp_if_expr$3!0@5#3 == tmp_if_expr$3!0@5#1
{-998} tmp_if_expr$3!0@5#4 == FALSE
{-999} tmp_if_expr$3!0@5#5 == (\guard#37 && tmp_if_expr$3!0@5#2)
{-1000} i!0@1#58 == 0
{-1001} \guard#38 == _controller_states#5[0l] > 1
{-1002} tmp_if_expr$2!0@1#82 == TRUE
{-1003} tmp_if_expr$2!0@1#83 == tmp_if_expr$2!0@1#81
{-1004} tmp_if_expr$2!0@1#84 == _controller_states#5[0l] < -1
{-1005} tmp_if_expr$2!0@1#85 == (\guard#38 || tmp_if_expr$2!0@1#84)
{-1006} check_safety#return_value!0#25 == 0
{-1007} check_safety#return_value!0#26 == check_safety#return_value!0#24
{-1008} i!0@1#60 == 0
{-1009} k!0@1#40 == 4
{-1010} i!0@1#61 == 1
{-1011} \guard#39 == _controller_states#5[1l] > 1
{-1012} tmp_if_expr$2!0@1#88 == TRUE
{-1013} tmp_if_expr$2!0@1#89 == tmp_if_expr$2!0@1#87
{-1014} tmp_if_expr$2!0@1#90 == _controller_states#5[1l] < -1
{-1015} tmp_if_expr$2!0@1#91 == (\guard#39 || tmp_if_expr$2!0@1#90)
{-1016} check_safety#return_value!0#27 == 0
{-1017} check_safety#return_value!0#28 == check_safety#return_value!0#26
{-1018} i!0@1#63 == 1
{-1019} k!0@1#42 == 4
{-1020} i!0@1#64 == 2
{-1021} \guard#40 == _controller_states#5[2l] > 1
{-1022} tmp_if_expr$2!0@1#94 == TRUE
{-1023} tmp_if_expr$2!0@1#95 == tmp_if_expr$2!0@1#93
{-1024} tmp_if_expr$2!0@1#96 == _controller_states#5[2l] < -1
{-1025} tmp_if_expr$2!0@1#97 == (\guard#40 || tmp_if_expr$2!0@1#96)
{-1026} check_safety#return_value!0#29 == 0
{-1027} check_safety#return_value!0#30 == check_safety#return_value!0#28
{-1028} i!0@1#66 == 2
{-1029} k!0@1#44 == 4
{-1030} i!0@1#67 == 3
{-1031} i!0@1#69 == 3
{-1032} k!0@1#46 == 4
{-1033} tmp_if_expr$2!0@1#100 == tmp_if_expr$2!0@1#98
{-1034} k!0@1#47 == 5
{-1035} i!0@1#73 == i!0@1#70
{-1036} k!0@1#49 == 5
{-1037} tmp_if_expr$2!0@1#102 == tmp_if_expr$2!0@1#100
{-1038} check_safety#return_value!0#31 == 1
{-1039} check_safety#return_value!0#32 == (tmp_if_expr$2!0@1#97 ? 0 : 1)
{-1040} i!0@1#74 == (tmp_if_expr$2!0@1#97 ? i!0@1#65 : i!0@1#73)
{-1041} k!0@1#51 == (tmp_if_expr$2!0@1#97 ? k!0@1#43 : k!0@1#50)
{-1042} tmp_if_expr$2!0@1#103 == (tmp_if_expr$2!0@1#97 ? tmp_if_expr$2!0@1#97 : tmp_if_expr$2!0@1#102)
{-1043} check_safety#return_value!0#33 == (tmp_if_expr$2!0@1#91 ? 0 : check_safety#return_value!0#32)
{-1044} i!0@1#75 == (tmp_if_expr$2!0@1#91 ? i!0@1#62 : i!0@1#74)
{-1045} k!0@1#52 == (tmp_if_expr$2!0@1#91 ? k!0@1#41 : k!0@1#51)
{-1046} tmp_if_expr$2!0@1#104 == (tmp_if_expr$2!0@1#91 ? tmp_if_expr$2!0@1#91 : tmp_if_expr$2!0@1#103)
{-1047} check_safety#return_value!0#34 == (tmp_if_expr$2!0@1#85 ? 0 : check_safety#return_value!0#33)
{-1048} i!0@1#76 == (tmp_if_expr$2!0@1#85 ? i!0@1#59 : i!0@1#75)
{-1049} k!0@1#53 == (tmp_if_expr$2!0@1#85 ? k!0@1#39 : k!0@1#52)
{-1050} tmp_if_expr$2!0@1#105 == (tmp_if_expr$2!0@1#85 ? tmp_if_expr$2!0@1#85 : tmp_if_expr$2!0@1#104)
{-1051} check_safety#return_value!0#35 == (tmp_if_expr$2!0@1#77 ? 0 : check_safety#return_value!0#34)
{-1052} i!0@1#77 == (tmp_if_expr$2!0@1#77 ? i!0@1#51 : i!0@1#76)
{-1053} k!0@1#54 == (tmp_if_expr$2!0@1#77 ? k!0@1#34 : k!0@1#53)
{-1054} tmp_if_expr$2!0@1#106 == (tmp_if_expr$2!0@1#77 ? tmp_if_expr$2!0@1#77 : tmp_if_expr$2!0@1#105)
{-1055} _controller_states#6 == (tmp_if_expr$2!0@1#77 ? _controller_states#4 : _controller_states#5)
{-1056} _controller_inputs#17 == (tmp_if_expr$2!0@1#77 ? _controller_inputs#13 : _controller_inputs#16)
{-1057} states_equals_A_states_plus_B_inputs_result#97 == (tmp_if_expr$2!0@1#77 ? states_equals_A_states_plus_B_inputs_result#77 : states_equals_A_states_plus_B_inputs_result#96)
{-1058} check_safety#return_value!0#36 == (tmp_if_expr$2!0@1#71 ? 0 : check_safety#return_value!0#35)
{-1059} i!0@1#78 == (tmp_if_expr$2!0@1#71 ? i!0@1#48 : i!0@1#77)
{-1060} k!0@1#55 == (tmp_if_expr$2!0@1#71 ? k!0@1#32 : k!0@1#54)
{-1061} tmp_if_expr$2!0@1#107 == (tmp_if_expr$2!0@1#71 ? tmp_if_expr$2!0@1#71 : tmp_if_expr$2!0@1#106)
{-1062} _controller_states#7 == (tmp_if_expr$2!0@1#71 ? _controller_states#4 : _controller_states#6)
{-1063} _controller_inputs#18 == (tmp_if_expr$2!0@1#71 ? _controller_inputs#13 : _controller_inputs#17)
{-1064} states_equals_A_states_plus_B_inputs_result#98 == (tmp_if_expr$2!0@1#71 ? states_equals_A_states_plus_B_inputs_result#77 : states_equals_A_states_plus_B_inputs_result#97)
{-1065} check_safety#return_value!0#37 == (tmp_if_expr$2!0@1#65 ? 0 : check_safety#return_value!0#36)
{-1066} i!0@1#79 == (tmp_if_expr$2!0@1#65 ? i!0@1#45 : i!0@1#78)
{-1067} k!0@1#56 == (tmp_if_expr$2!0@1#65 ? k!0@1#30 : k!0@1#55)
{-1068} tmp_if_expr$2!0@1#108 == (tmp_if_expr$2!0@1#65 ? tmp_if_expr$2!0@1#65 : tmp_if_expr$2!0@1#107)
{-1069} _controller_states#8 == (tmp_if_expr$2!0@1#65 ? _controller_states#4 : _controller_states#7)
{-1070} _controller_inputs#19 == (tmp_if_expr$2!0@1#65 ? _controller_inputs#13 : _controller_inputs#18)
{-1071} states_equals_A_states_plus_B_inputs_result#99 == (tmp_if_expr$2!0@1#65 ? states_equals_A_states_plus_B_inputs_result#77 : states_equals_A_states_plus_B_inputs_result#98)
{-1072} check_safety#return_value!0#38 == (tmp_if_expr$2!0@1#57 ? 0 : check_safety#return_value!0#37)
{-1073} i!0@1#80 == (tmp_if_expr$2!0@1#57 ? i!0@1#37 : i!0@1#79)
{-1074} k!0@1#57 == (tmp_if_expr$2!0@1#57 ? k!0@1#25 : k!0@1#56)
{-1075} tmp_if_expr$2!0@1#109 == (tmp_if_expr$2!0@1#57 ? tmp_if_expr$2!0@1#57 : tmp_if_expr$2!0@1#108)
{-1076} _controller_states#9 == (tmp_if_expr$2!0@1#57 ? _controller_states#3 : _controller_states#8)
{-1077} _controller_inputs#20 == (tmp_if_expr$2!0@1#57 ? _controller_inputs#10 : _controller_inputs#19)
{-1078} states_equals_A_states_plus_B_inputs_result#100 == (tmp_if_expr$2!0@1#57 ? states_equals_A_states_plus_B_inputs_result#58 : states_equals_A_states_plus_B_inputs_result#99)
{-1079} check_safety#return_value!0#39 == (tmp_if_expr$2!0@1#51 ? 0 : check_safety#return_value!0#38)
{-1080} i!0@1#81 == (tmp_if_expr$2!0@1#51 ? i!0@1#34 : i!0@1#80)
{-1081} k!0@1#58 == (tmp_if_expr$2!0@1#51 ? k!0@1#23 : k!0@1#57)
{-1082} tmp_if_expr$2!0@1#110 == (tmp_if_expr$2!0@1#51 ? tmp_if_expr$2!0@1#51 : tmp_if_expr$2!0@1#109)
{-1083} _controller_states#10 == (tmp_if_expr$2!0@1#51 ? _controller_states#3 : _controller_states#9)
{-1084} _controller_inputs#21 == (tmp_if_expr$2!0@1#51 ? _controller_inputs#10 : _controller_inputs#20)
{-1085} states_equals_A_states_plus_B_inputs_result#101 == (tmp_if_expr$2!0@1#51 ? states_equals_A_states_plus_B_inputs_result#58 : states_equals_A_states_plus_B_inputs_result#100)
{-1086} check_safety#return_value!0#40 == (tmp_if_expr$2!0@1#45 ? 0 : check_safety#return_value!0#39)
{-1087} i!0@1#82 == (tmp_if_expr$2!0@1#45 ? i!0@1#31 : i!0@1#81)
{-1088} k!0@1#59 == (tmp_if_expr$2!0@1#45 ? k!0@1#21 : k!0@1#58)
{-1089} tmp_if_expr$2!0@1#111 == (tmp_if_expr$2!0@1#45 ? tmp_if_expr$2!0@1#45 : tmp_if_expr$2!0@1#110)
{-1090} _controller_states#11 == (tmp_if_expr$2!0@1#45 ? _controller_states#3 : _controller_states#10)
{-1091} _controller_inputs#22 == (tmp_if_expr$2!0@1#45 ? _controller_inputs#10 : _controller_inputs#21)
{-1092} states_equals_A_states_plus_B_inputs_result#102 == (tmp_if_expr$2!0@1#45 ? states_equals_A_states_plus_B_inputs_result#58 : states_equals_A_states_plus_B_inputs_result#101)
{-1093} check_safety#return_value!0#41 == (tmp_if_expr$2!0@1#37 ? 0 : check_safety#return_value!0#40)
{-1094} i!0@1#83 == (tmp_if_expr$2!0@1#37 ? i!0@1#23 : i!0@1#82)
{-1095} k!0@1#60 == (tmp_if_expr$2!0@1#37 ? k!0@1#16 : k!0@1#59)
{-1096} tmp_if_expr$2!0@1#112 == (tmp_if_expr$2!0@1#37 ? tmp_if_expr$2!0@1#37 : tmp_if_expr$2!0@1#111)
{-1097} _controller_states#12 == (tmp_if_expr$2!0@1#37 ? _controller_states#2 : _controller_states#11)
{-1098} _controller_inputs#23 == (tmp_if_expr$2!0@1#37 ? _controller_inputs#7 : _controller_inputs#22)
{-1099} states_equals_A_states_plus_B_inputs_result#103 == (tmp_if_expr$2!0@1#37 ? states_equals_A_states_plus_B_inputs_result#39 : states_equals_A_states_plus_B_inputs_result#102)
{-1100} check_safety#return_value!0#42 == (tmp_if_expr$2!0@1#31 ? 0 : check_safety#return_value!0#41)
{-1101} i!0@1#84 == (tmp_if_expr$2!0@1#31 ? i!0@1#20 : i!0@1#83)
{-1102} k!0@1#61 == (tmp_if_expr$2!0@1#31 ? k!0@1#14 : k!0@1#60)
{-1103} tmp_if_expr$2!0@1#113 == (tmp_if_expr$2!0@1#31 ? tmp_if_expr$2!0@1#31 : tmp_if_expr$2!0@1#112)
{-1104} _controller_states#13 == (tmp_if_expr$2!0@1#31 ? _controller_states#2 : _controller_states#12)
{-1105} _controller_inputs#24 == (tmp_if_expr$2!0@1#31 ? _controller_inputs#7 : _controller_inputs#23)
{-1106} states_equals_A_states_plus_B_inputs_result#104 == (tmp_if_expr$2!0@1#31 ? states_equals_A_states_plus_B_inputs_result#39 : states_equals_A_states_plus_B_inputs_result#103)
{-1107} check_safety#return_value!0#43 == (tmp_if_expr$2!0@1#25 ? 0 : check_safety#return_value!0#42)
{-1108} i!0@1#85 == (tmp_if_expr$2!0@1#25 ? i!0@1#17 : i!0@1#84)
{-1109} k!0@1#62 == (tmp_if_expr$2!0@1#25 ? k!0@1#12 : k!0@1#61)
{-1110} tmp_if_expr$2!0@1#114 == (tmp_if_expr$2!0@1#25 ? tmp_if_expr$2!0@1#25 : tmp_if_expr$2!0@1#113)
{-1111} _controller_states#14 == (tmp_if_expr$2!0@1#25 ? _controller_states#2 : _controller_states#13)
{-1112} _controller_inputs#25 == (tmp_if_expr$2!0@1#25 ? _controller_inputs#7 : _controller_inputs#24)
{-1113} states_equals_A_states_plus_B_inputs_result#105 == (tmp_if_expr$2!0@1#25 ? states_equals_A_states_plus_B_inputs_result#39 : states_equals_A_states_plus_B_inputs_result#104)
{-1114} check_safety#return_value!0#44 == (tmp_if_expr$2!0@1#17 ? 0 : check_safety#return_value!0#43)
{-1115} i!0@1#86 == (tmp_if_expr$2!0@1#17 ? i!0@1#9 : i!0@1#85)
{-1116} k!0@1#63 == (tmp_if_expr$2!0@1#17 ? k!0@1#7 : k!0@1#62)
{-1117} tmp_if_expr$2!0@1#115 == (tmp_if_expr$2!0@1#17 ? tmp_if_expr$2!0@1#17 : tmp_if_expr$2!0@1#114)
{-1118} _controller_states#15 == (tmp_if_expr$2!0@1#17 ? _controller_states#1 : _controller_states#14)
{-1119} _controller_inputs#26 == (tmp_if_expr$2!0@1#17 ? _controller_inputs#4 : _controller_inputs#25)
{-1120} states_equals_A_states_plus_B_inputs_result#106 == (tmp_if_expr$2!0@1#17 ? states_equals_A_states_plus_B_inputs_result#20 : states_equals_A_states_plus_B_inputs_result#105)
{-1121} check_safety#return_value!0#45 == (tmp_if_expr$2!0@1#11 ? 0 : check_safety#return_value!0#44)
{-1122} i!0@1#87 == (tmp_if_expr$2!0@1#11 ? i!0@1#6 : i!0@1#86)
{-1123} k!0@1#64 == (tmp_if_expr$2!0@1#11 ? k!0@1#5 : k!0@1#63)
{-1124} tmp_if_expr$2!0@1#116 == (tmp_if_expr$2!0@1#11 ? tmp_if_expr$2!0@1#11 : tmp_if_expr$2!0@1#115)
{-1125} _controller_states#16 == (tmp_if_expr$2!0@1#11 ? _controller_states#1 : _controller_states#15)
{-1126} _controller_inputs#27 == (tmp_if_expr$2!0@1#11 ? _controller_inputs#4 : _controller_inputs#26)
{-1127} states_equals_A_states_plus_B_inputs_result#107 == (tmp_if_expr$2!0@1#11 ? states_equals_A_states_plus_B_inputs_result#20 : states_equals_A_states_plus_B_inputs_result#106)
{-1128} check_safety#return_value!0#46 == (tmp_if_expr$2!0@1#5 ? 0 : check_safety#return_value!0#45)
{-1129} i!0@1#88 == (tmp_if_expr$2!0@1#5 ? i!0@1#3 : i!0@1#87)
{-1130} k!0@1#65 == (tmp_if_expr$2!0@1#5 ? k!0@1#3 : k!0@1#64)
{-1131} tmp_if_expr$2!0@1#117 == (tmp_if_expr$2!0@1#5 ? tmp_if_expr$2!0@1#5 : tmp_if_expr$2!0@1#116)
{-1132} _controller_states#17 == (tmp_if_expr$2!0@1#5 ? _controller_states#1 : _controller_states#16)
{-1133} _controller_inputs#28 == (tmp_if_expr$2!0@1#5 ? _controller_inputs#4 : _controller_inputs#27)
{-1134} states_equals_A_states_plus_B_inputs_result#108 == (tmp_if_expr$2!0@1#5 ? states_equals_A_states_plus_B_inputs_result#20 : states_equals_A_states_plus_B_inputs_result#107)
{-1135} return_value_check_safety$2!0@1#2 == check_safety#return_value!0#46
|--------------------------
{1} !(return_value_check_safety$2!0@1#2 == 0)

