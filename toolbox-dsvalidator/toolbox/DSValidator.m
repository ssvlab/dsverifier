% TOOLBOX
%
% Files
%   deltapoly                      - Performs the delta transformation for a transfer function b(z)/a(z)
%   dsv_comparison                 - Script to verify and compare the results between MATLAB and DSVerifier
%   dsv_df1                        - Simulate and reproduce a counterexample for limit cycle using DFI realization.
%   dsv_df2                        - Simulate and reproduce a counterexample for limit cycle using DFII realization.
%   dsv_extraction                 - Function to extract all counterexamples from .out files generated by DSVerifier
%   dsv_parser                     - Script to get the counterexamples parameters and transform them in variables on workspace
%   dsv_report                     - Script to generate a report about automatic validation
%   dsv_simulation                 - Script to simulate and validate a property for a system automatically.
%   dsv_tdf2                       - Simulate and reproduce a counterexample for limit cycle using DDFII realization.
%   dsv_validation                 - Script to run all steps to validate counterexamples
%   fwl                            - Obtains the FWL format of polynomial a with l fractional bits.
%   fxp_add                        - Function to perform a fixed point addition out = a + b;
%   fxp_div                        - Function to perform a fixed point division out = a / b
%   fxp_mult                       - Function to perform a fixed point multiplication out = amult * bmult
%   fxp_quantize                   - Function to perform a fixed point quantization.
%   fxp_rounding                   - Function to perform a fixed point rounding function.
%   fxp_sub                        - Function to perform a fixed point subtraction out = a - b
%   mode_saturate                  - Function to saturate mode for arithmetic overflow
%   mode_wrap                      - Function to wrap around mode for arithmetic overflow
%   plot_limit_cycle               - Plot the limit cycle output of your system.
%   plot_overflow                  - Plot the overflow output of your system.
%   plot_zero_pole                 - Plot the poles and zeros of your system (very useful to check stability and minimum phase) 
%   reproduceError                 - Script developed to reproduce error property given a 'path' with all .out counterexamples.
%   reproduceLimitCycle            - Script developed to reproduce limit cycle property given a 'path' with all .out counterexamples.
%   reproduceMinimumPhase          - Script developed to reproduce minimum-phase property given a 'path' with all .out counterexamples.
%   reproduceOutputs               - Script developed to reproduce the counterexamples using DFI, DFII and TDFII realizations, 
%   reproduceOverflow              - Script developed to reproduce overflow property given a 'path' with all .out counterexamples.
%   reproduceStability             - Script developed to reproduce stability property given a 'path' with all .out counterexamples.
%   shiftL                         - Function developed to shift left during the realizations (DFI,DFII and TDFII)
%   shiftR                         - Function developed to shift right during the realizations (DFI,DFII and TDFII)
%   simulate_error                 - Script developed to simulate the error property using DFI, DFII and TDFII realizations.
%   simulate_limit_cycle           - Script developed to simulate the limit cycle counterexamples using DFI, DFII and TDFII realizations.
%   simulate_minimum_phase         - Script developed to simulate the minimum phase property in counterexamples
%   simulate_overflow              - Script developed to simulate the overflow property in counterexamples
%   simulate_stability             - Script developed to simulate the stability property in counterexamples
%   simulate_stability_closed_loop - Script developed to simulate the stability property in counterexamples
